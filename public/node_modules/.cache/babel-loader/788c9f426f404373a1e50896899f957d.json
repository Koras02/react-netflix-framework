{"ast":null,"code":"var _jsxFileName = \"/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/containers/profiles.js\";\nimport React from 'react';\nimport { Header, Profiles } from '../components';\nimport logo from \"../logo.svg\";\nimport * as ROUTES from \"../constants/routes\";\nimport { useHistory, useParams } from 'react-router';\nexport function SelectProfileContainer({\n  user,\n  setProfile,\n  props\n}) {\n  let history = useHistory();\n  let {\n    id\n  } = useParams(0);\n  let userdata = props.data.find(function (Profile) {\n    return Profile.id === id;\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    bg: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Header.Frame, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Header.Logo, {\n    to: ROUTES.HOME,\n    src: logo,\n    alt: \"\\uB137\\uD50C\\uB9AD\\uC2A4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(Profiles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Profiles.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 19\n    }\n  }, \"\\uC2DC\\uCCAD\\uD558\\uC2E4 \\uD504\\uB85C\\uD544\\uC744 \\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694\"), /*#__PURE__*/React.createElement(Profiles.List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Profiles.User, {\n    onClick: () => setProfile({\n      displayName: user.displayName,\n      photoURL: user.photoURL\n    }),\n    \"data-testid\": \"user-profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Profiles.Picture, {\n    src: user.photoURL,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 28\n    }\n  }), /*#__PURE__*/React.createElement(Profiles.Name, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 27\n    }\n  }, user.displayName), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user_img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/img/profile\" + (userdata.id + 1) + \".png\",\n    width: \"100px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 31\n    }\n  }))))));\n}","map":{"version":3,"sources":["/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/containers/profiles.js"],"names":["React","Header","Profiles","ROUTES","useHistory","useParams","SelectProfileContainer","user","setProfile","props","history","id","userdata","data","find","Profile","HOME","logo","displayName","photoURL"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAgBC,QAAhB,QAAgC,eAAhC;;AAEA,OAAO,KAAKC,MAAZ,MAAwB,qBAAxB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,cAAtC;AAGA,OAAO,SAASC,sBAAT,CAAgC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,UAAR;AAAmBC,EAAAA;AAAnB,CAAhC,EAA4D;AAC9D,MAAIC,OAAO,GAAGN,UAAU,EAAxB;AAEA,MAAI;AAAEO,IAAAA;AAAF,MAASN,SAAS,CAAC,CAAD,CAAtB;AAEA,MAAIO,QAAQ,GAAGH,KAAK,CAACI,IAAN,CAAWC,IAAX,CAAgB,UAAUC,OAAV,EAAmB;AAC9C,WAAOA,OAAO,CAACJ,EAAR,KAAeA,EAAtB;AACH,GAFc,CAAf;AAID,sBACI,uDACE,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAE,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD,CAAQ,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD,CAAQ,IAAR;AAAa,IAAA,EAAE,EAAER,MAAM,CAACa,IAAxB;AAA8B,IAAA,GAAG,EAAEC,IAAnC;AAAyC,IAAA,GAAG,EAAC,0BAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADF,eAQM,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD,CAAU,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8FADJ,eAEI,oBAAC,QAAD,CAAU,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD,CAAU,IAAV;AACE,IAAA,OAAO,EAAE,MAAMT,UAAU,CAAC;AAAEU,MAAAA,WAAW,EAAEX,IAAI,CAACW,WAApB;AAAiCC,MAAAA,QAAQ,EAAEZ,IAAI,CAACY;AAAhD,KAAD,CAD3B;AAEE,mBAAY,cAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIK,oBAAC,QAAD,CAAU,OAAV;AAAkB,IAAA,GAAG,EAAEZ,IAAI,CAACY,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJL,eAKI,oBAAC,QAAD,CAAU,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgBZ,IAAI,CAACW,WAArB,CALJ,eAMI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACG,IAAA,GAAG,EAAE,kBAAkBN,QAAQ,CAACD,EAAT,GAAc,CAAhC,IAAqC,MAD7C;AAEG,IAAA,KAAK,EAAC,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CANJ,CADJ,CAFJ,CARN,CADJ;AA6BH","sourcesContent":["import React from 'react';\nimport { Header,Profiles } from '../components';\nimport logo from '../logo.svg';\nimport * as ROUTES from \"../constants/routes\";\nimport { useHistory, useParams } from 'react-router';\n\n\nexport function SelectProfileContainer({ user, setProfile,props }) {\n     let history = useHistory();\n\n     let { id } = useParams(0);\n \n     let userdata = props.data.find(function (Profile) {\n         return Profile.id === id;\n     });\n   \n    return (\n        <>\n          <Header bg={false}>\n              <Header.Frame>\n                  <Header.Logo to={ROUTES.HOME} src={logo} alt=\"넷플릭스\" />\n              </Header.Frame>\n            </Header>\n \n\n              <Profiles>\n                  <Profiles.Title>시청하실 프로필을 선택해주세요</Profiles.Title>\n                  <Profiles.List>\n                      <Profiles.User\n                        onClick={() => setProfile({ displayName: user.displayName, photoURL: user.photoURL})}\n                        data-testid=\"user-profile\"\n                    >\n                           <Profiles.Picture src={user.photoURL} />\n                          <Profiles.Name>{user.displayName}</Profiles.Name>\n                          <div className=\"user_img\">\n                              <img \n                                 src={\"/img/profile\" + (userdata.id + 1) + \".png\"}\n                                 width=\"100px\"\n                            ></img>\n                          </div>\n                    </Profiles.User>\n                  </Profiles.List>\n              </Profiles>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}