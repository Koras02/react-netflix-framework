{"ast":null,"code":"import _slicedToArray from\"/home/kim/GitHub/Portfolio/react/netflix-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"/home/kim/GitHub/Portfolio/react/netflix-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"children\"],_excluded2=[\"children\"],_excluded3=[\"children\"],_excluded4=[\"children\"],_excluded5=[\"children\"];import React,{createContext,useContext,useState}from'react';import{Container,Inner,Title,Item,Header,Body}from'./styles/accordion';var toggleContext=createContext();export default function Accordion(_ref){var children=_ref.children,restProps=_objectWithoutProperties(_ref,_excluded);return/*#__PURE__*/React.createElement(Container,restProps,/*#__PURE__*/React.createElement(Inner,null,children));}Accordion.Title=function AccordionTitle(_ref2){var children=_ref2.children,restProps=_objectWithoutProperties(_ref2,_excluded2);return/*#__PURE__*/React.createElement(Title,restProps,children);};Accordion.Item=function AccordionItem(_ref3){var children=_ref3.children,restProps=_objectWithoutProperties(_ref3,_excluded3);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),toggleShow=_useState2[0],setToggleShow=_useState2[1];return/*#__PURE__*/React.createElement(toggleContext.Provider,{value:{toggleShow:toggleShow,setToggleShow:setToggleShow}},/*#__PURE__*/React.createElement(Item,restProps,children));};Accordion.Header=function AccordionHeader(_ref4){var children=_ref4.children,restProps=_objectWithoutProperties(_ref4,_excluded4);var _useContext=useContext(toggleContext),toggleShow=_useContext.toggleShow,setToggleShow=_useContext.setToggleShow;return/*#__PURE__*/React.createElement(Header,Object.assign({onClick:function onClick(){return setToggleShow(function(toggleShow){return!toggleShow;});}},restProps),children,toggleShow?/*#__PURE__*/React.createElement(\"img\",{src:\"/images/icons/close-slim.png\",alt:\"Close\"}):/*#__PURE__*/React.createElement(\"img\",{src:\"/images/icons/add.png\",alt:\"Open\"}));};Accordion.Body=function AccordionBody(_ref5){var children=_ref5.children,restProps=_objectWithoutProperties(_ref5,_excluded5);var _useContext2=useContext(toggleContext),toggleShow=_useContext2.toggleShow;/* return toggleShow ? <Body {...restProps}>{children}</Body> : null; */return/*#__PURE__*/React.createElement(Body,Object.assign({className:toggleShow?'open':'closed'},restProps),/*#__PURE__*/React.createElement(\"span\",null,children));};","map":{"version":3,"sources":["/home/kim/GitHub/Portfolio/react/netflix-react/src/components/accordion/index.js"],"names":["React","createContext","useContext","useState","Container","Inner","Title","Item","Header","Body","toggleContext","Accordion","children","restProps","AccordionTitle","AccordionItem","toggleShow","setToggleShow","AccordionHeader","AccordionBody"],"mappings":"ydAAA,MAAOA,CAAAA,KAAP,EAAgBC,aAAhB,CAA+BC,UAA/B,CAA2CC,QAA3C,KAA2D,OAA3D,CACA,OAASC,SAAT,CAAoBC,KAApB,CAA2BC,KAA3B,CAAkCC,IAAlC,CAAwCC,MAAxC,CAAgDC,IAAhD,KAA4D,oBAA5D,CAEA,GAAMC,CAAAA,aAAa,CAAGT,aAAa,EAAnC,CAEA,cAAe,SAASU,CAAAA,SAAT,MAA+C,IAA1BC,CAAAA,QAA0B,MAA1BA,QAA0B,CAAbC,SAAa,0CAC5D,mBACE,oBAAC,SAAD,CAAeA,SAAf,cACE,oBAAC,KAAD,MAAQD,QAAR,CADF,CADF,CAKD,CAEDD,SAAS,CAACL,KAAV,CAAkB,QAASQ,CAAAA,cAAT,OAAoD,IAA1BF,CAAAA,QAA0B,OAA1BA,QAA0B,CAAbC,SAAa,4CACpE,mBAAO,oBAAC,KAAD,CAAWA,SAAX,CAAuBD,QAAvB,CAAP,CACD,CAFD,CAKAD,SAAS,CAACJ,IAAV,CAAiB,QAASQ,CAAAA,aAAT,OAAmD,IAA1BH,CAAAA,QAA0B,OAA1BA,QAA0B,CAAbC,SAAa,4CAClE,cAAoCV,QAAQ,CAAC,KAAD,CAA5C,wCAAOa,UAAP,eAAmBC,aAAnB,eACA,mBACE,oBAAC,aAAD,CAAe,QAAf,EAAwB,KAAK,CAAE,CAAED,UAAU,CAAVA,UAAF,CAAcC,aAAa,CAAbA,aAAd,CAA/B,eACE,oBAAC,IAAD,CAAUJ,SAAV,CAAsBD,QAAtB,CADF,CADF,CAKD,CAPD,CASAD,SAAS,CAACH,MAAV,CAAmB,QAASU,CAAAA,eAAT,OAAqD,IAA1BN,CAAAA,QAA0B,OAA1BA,QAA0B,CAAbC,SAAa,4CACtE,gBAAsCX,UAAU,CAACQ,aAAD,CAAhD,CAAQM,UAAR,aAAQA,UAAR,CAAoBC,aAApB,aAAoBA,aAApB,CAEA,mBACE,oBAAC,MAAD,gBAAQ,OAAO,CAAE,yBAAMA,CAAAA,aAAa,CAAC,SAACD,UAAD,QAAgB,CAACA,UAAjB,EAAD,CAAnB,EAAjB,EAAuEH,SAAvE,EACGD,QADH,CAIGI,UAAU,cACT,2BAAK,GAAG,CAAC,8BAAT,CAAwC,GAAG,CAAC,OAA5C,EADS,cAGT,2BAAK,GAAG,CAAC,uBAAT,CAAiC,GAAG,CAAC,MAArC,EAPJ,CADF,CAYD,CAfD,CAiBAL,SAAS,CAACF,IAAV,CAAiB,QAASU,CAAAA,aAAT,OAAmD,IAA1BP,CAAAA,QAA0B,OAA1BA,QAA0B,CAAbC,SAAa,4CAClE,iBAAuBX,UAAU,CAACQ,aAAD,CAAjC,CAAQM,UAAR,cAAQA,UAAR,CAEA,wEACA,mBACE,oBAAC,IAAD,gBAAM,SAAS,CAAEA,UAAU,CAAG,MAAH,CAAY,QAAvC,EAAqDH,SAArD,eACE,gCAAOD,QAAP,CADF,CADF,CAKD,CATD","sourcesContent":["import React, { createContext, useContext, useState } from 'react';\nimport { Container, Inner, Title, Item, Header, Body } from './styles/accordion';\n\nconst toggleContext = createContext();\n\nexport default function Accordion({ children, ...restProps }) {\n  return (\n    <Container {...restProps}>\n      <Inner>{children}</Inner>\n    </Container>\n  );\n}\n\nAccordion.Title = function AccordionTitle({ children, ...restProps }) {\n  return <Title {...restProps}>{children}</Title>;\n};\n\n\nAccordion.Item = function AccordionItem({ children, ...restProps }) {\n  const [toggleShow, setToggleShow] = useState(false);\n  return (\n    <toggleContext.Provider value={{ toggleShow, setToggleShow }}>\n      <Item {...restProps}>{children}</Item>\n    </toggleContext.Provider>\n  );\n};\n\nAccordion.Header = function AccordionHeader({ children, ...restProps }) {\n  const { toggleShow, setToggleShow } = useContext(toggleContext);\n\n  return (\n    <Header onClick={() => setToggleShow((toggleShow) => !toggleShow)} {...restProps}>\n      {children}\n      {/* We can check a state in following way */}\n      {/* <pre>{JSON.stringify(toggleShow)}</pre> */}\n      {toggleShow ? (\n        <img src=\"/images/icons/close-slim.png\" alt=\"Close\" />\n      ) : (\n        <img src=\"/images/icons/add.png\" alt=\"Open\" />\n      )}\n    </Header>\n  );\n};\n\nAccordion.Body = function AccordionBody({ children, ...restProps }) {\n  const { toggleShow } = useContext(toggleContext);\n\n  /* return toggleShow ? <Body {...restProps}>{children}</Body> : null; */\n  return (\n    <Body className={toggleShow ? 'open' : 'closed'} {...restProps}>\n      <span>{children}</span>\n    </Body>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}