{"ast":null,"code":"import React from'react';import{BrowserRouter as Router,Switch}from'react-router-dom';import{Home}from'./pages';import*as ROUTES from\"./constants/routes\";import{useAuthListener}from'./hooks';import{IsUserRedirect}from'./helpers/routes';import{jsx as _jsx}from\"react/jsx-runtime\";export default function App(){// 처음엔 useAuth로 연습 \nvar _useAuthListener=useAuthListener(),user=_useAuthListener.user;return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsx(Switch,{children:/*#__PURE__*/_jsx(IsUserRedirect,{user:user,loggedInPath:ROUTES.BROWSE,path:ROUTES.HOME,children:/*#__PURE__*/_jsx(Home,{})})})});}","map":{"version":3,"sources":["/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/app.js"],"names":["React","BrowserRouter","Router","Switch","Home","ROUTES","useAuthListener","IsUserRedirect","App","user","BROWSE","HOME"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,aAAa,GAAIC,CAAAA,MAA1B,CAAkCC,MAAlC,KAAgD,kBAAhD,CACA,OAASC,IAAT,KAAqB,SAArB,CACA,MAAO,GAAKC,CAAAA,MAAZ,KAAyB,oBAAzB,CACA,OAASC,eAAT,KAAgC,SAAhC,CACA,OAASC,cAAT,KAA+B,kBAA/B,C,2CAGA,cAAe,SAASC,CAAAA,GAAT,EAAe,CAC5B;AAD4B,qBAEVF,eAAe,EAFL,CAEnBG,IAFmB,kBAEnBA,IAFmB,CAI5B,mBACE,KAAC,MAAD,wBACG,KAAC,MAAD,wBAEE,KAAC,cAAD,EACA,IAAI,CAAEA,IADN,CAEA,YAAY,CAAEJ,MAAM,CAACK,MAFrB,CAGA,IAAI,CAAEL,MAAM,CAACM,IAHb,uBAKC,KAAC,IAAD,IALD,EAFF,EADH,EADF,CAuBD","sourcesContent":["import React from 'react'\nimport { BrowserRouter as Router, Switch } from 'react-router-dom';\nimport { Home } from './pages';\nimport * as ROUTES  from \"./constants/routes\";\nimport { useAuthListener } from './hooks';\nimport { IsUserRedirect } from './helpers/routes';\n \n\nexport default function App() {\n  // 처음엔 useAuth로 연습 \n   const { user } = useAuthListener();\n\n  return (\n    <Router>\n       <Switch>\n         {/* 입력받을 유저와 로그인 경로를 불러옴 최종적으로 로그인 경로는 Browse로 가고 시작점은 SignIn 이다.*/}\n         <IsUserRedirect \n         user={user} \n         loggedInPath={ROUTES.BROWSE} \n         path={ROUTES.HOME}\n         >\n          <Home />\n        </IsUserRedirect>\n       \n         {/* <IsUserRedirect \n           user={user} \n           loggedInPath={ROUTES.BROWSE}\n           path={ROUTES.SIGN_IN}\n          >\n             <SignIn/>\n         </IsUserRedirect>\n          */}\n       </Switch>\n    </Router>\n  );\n}\n\n\n \n\n\n "]},"metadata":{},"sourceType":"module"}