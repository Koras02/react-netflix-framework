{"ast":null,"code":"var _jsxFileName = \"/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/pages/signin.js\";\nimport React, { useContext, useState } from 'react';\nimport { HeaderContainer } from '../containers/header';\nimport { Form } from \"../components\";\nimport { FirebaseContext } from '../context/firebase';\nimport { useHistory } from 'react-router';\nexport default function SignIn() {\n  // 이메일 주소 비밀 번호 \n  const history = useHistory();\n  const {\n    firebase\n  } = useContext(FirebaseContext);\n  const [emailAddress, setEmailAddress] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(''); // 핸드폰 번호 이메일 비밀번호 입력 방식 \n\n  const isInvalid = password === '' || emailAddress === '' || phoneNumber;\n\n  const handleSignIn = e => {\n    e.preventDefault();\n\n    if (isInvalid) {\n      return setError(\"죄송합니다. 이 이메일 주소를 사용하는 계정을 찾을 수 없습니다. 다시 시도하시거나 새로운 계정을 등록하세요.\");\n    }\n\n    firebase.auth();\n  }; // 로그인 구현 \n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(HeaderContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }, \"\\uB85C\\uADF8\\uC778\"))));\n}","map":{"version":3,"sources":["/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/pages/signin.js"],"names":["React","useContext","useState","HeaderContainer","Form","FirebaseContext","useHistory","SignIn","history","firebase","emailAddress","setEmailAddress","phoneNumber","setPhoneNumber","password","setPassword","error","setError","isInvalid","handleSignIn","e","preventDefault","auth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,eAAT,QAAgC,sBAAhC;AACA,SAASC,IAAT,QAAqB,eAArB;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,SAASC,UAAT,QAA2B,cAA3B;AAGA,eAAe,SAAUC,MAAV,GAAmB;AAE9B;AACA,QAAMC,OAAO,GAAGF,UAAU,EAA1B;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAeR,UAAU,CAACI,eAAD,CAA/B;AACA,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC,CAR8B,CAU9B;;AACA,QAAMgB,SAAS,GAAGJ,QAAQ,KAAK,EAAb,IAAmBJ,YAAY,KAAK,EAApC,IAA0CE,WAA5D;;AAEA,QAAMO,YAAY,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAIH,SAAJ,EAAe;AACX,aAAOD,QAAQ,CAAC,+DAAD,CAAf;AACH;;AAEDR,IAAAA,QAAQ,CACLa,IADH;AAGF,GAVD,CAb8B,CAyB9B;;;AACA,sBACG,uDACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,CADH,CADF,CADH;AAeH","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { HeaderContainer } from '../containers/header';\nimport { Form } from \"../components\";\nimport { FirebaseContext } from '../context/firebase';\nimport { useHistory } from 'react-router';\n\n\nexport default function  SignIn() {\n\n    // 이메일 주소 비밀 번호 \n    const history = useHistory();\n    const { firebase } = useContext(FirebaseContext);\n    const [emailAddress, setEmailAddress] = useState('');\n    const [phoneNumber, setPhoneNumber] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n\n    // 핸드폰 번호 이메일 비밀번호 입력 방식 \n    const isInvalid = password === '' || emailAddress === '' || phoneNumber;\n\n    const handleSignIn = (e) => {\n       e.preventDefault();\n\n       if (isInvalid) {\n           return setError(\"죄송합니다. 이 이메일 주소를 사용하는 계정을 찾을 수 없습니다. 다시 시도하시거나 새로운 계정을 등록하세요.\")\n       }\n\n       firebase\n         .auth()\n        \n    }\n\n    // 로그인 구현 \n    return (\n       <>\n         <HeaderContainer>\n            <Form>\n              <Form.Title>로그인</Form.Title>\n          \n              {/* 로그인 실패시 에러 */}\n              {/* {error && <Form.Error>{error}</Form.Error>} */}\n            \n            \n            \n            </Form>\n         </HeaderContainer>\n       </>  \n    )\n}\n\n "]},"metadata":{},"sourceType":"module"}