{"version":3,"sources":["context/firebase.js","components/header/styles/header.js","components/header/index.js","constants/routes.js","logo.svg","containers/header.js","pages/home.js","helpers/routes.js","app.js","hooks/use-auth-listener.js","global-styles.js","lib/firebase.prod.js","index.js"],"names":["FirebaseContext","createContext","Background","styled","div","src","dontShowOnSmallViewPort","Container","Logo","img","ButtonLink","ReachRouterLink","Group","Header","bg","children","restProps","data-testid","Frame","Grop","to","HeaderContainer","Images","alt","Home","IsUserRedirect","user","loggedInPath","rest","render","pathname","App","useState","JSON","parse","localStorage","getItem","setUser","firebase","useContext","useEffect","listener","auth","onAuthStateChanged","authUser","setItem","stringify","removeItem","useAuthListener","path","GlobalStyles","createGlobalStyle","Firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Provider","value","document","getElementById"],"mappings":"kMAEaA,EAAkBC,wBAAc,M,mCCEhCC,EAAaC,IAAOC,IAAV,yEAAGD,CAAH,mMAGwF,gBAAGE,EAAH,EAAGA,IAAH,OAAcA,EAAG,yBAAqBA,EAArB,QAAiC,gCAIxJ,qBAAGC,yBAAqD,uBAIpDC,EAAYJ,IAAOC,IAAV,wEAAGD,CAAH,8CAMTK,EAAOL,IAAOM,IAAV,mEAAGN,CAAH,mGAUJO,EAAaP,YAAOQ,KAAV,yEAAGR,CAAH,kNAiBVS,EAAST,IAAOC,IAAX,oEAAID,CAAJ,sC,OCrCH,SAASU,EAAT,GAAwD,IAAD,IAArCC,UAAqC,SAA1BC,EAA0B,EAA1BA,SAAaC,EAAa,iCAClE,OAAOF,EACL,cAACZ,EAAD,yBAAYe,cAAY,aAAgBD,GAAxC,aACGD,KAGHA,EAKNF,EAAOK,MAAQ,YAAkD,IAA3BH,EAA0B,EAA1BA,SAAaC,EAAa,4BAC5D,OAAO,cAACT,EAAD,2BAAeS,GAAf,aAA2BD,MAGtCF,EAAOM,KAAO,YAAkD,IAA3BJ,EAA0B,EAA1BA,SAAaC,EAAa,4BAC7D,OAAO,cAACJ,EAAD,2BAAWI,GAAX,aAAuBD,MAIhCF,EAAOL,KAAO,YAA2C,IAArBY,EAAoB,EAApBA,GAAOJ,EAAa,sBACpD,OACI,cAAC,IAAD,CAAgBI,GAAIA,EAApB,SACI,cAACZ,EAAD,eAAUQ,OAKtBH,EAAOH,WAAa,YAAuD,IAA3BK,EAA0B,EAA1BA,SAAaC,EAAa,4BACxE,OAAO,cAACN,EAAD,2BAAgBM,GAAhB,aAA4BD,MCxC9B,ICAQ,MAA0B,iCCKlC,SAASM,EAAT,GAAwC,IAAbN,EAAY,EAAZA,SAC9B,OACI,eAACF,EAAD,WAEI,eAACA,EAAOK,MAAR,WACI,cAACL,EAAOL,KAAR,CAAaY,GFVT,IEU0Bf,IAAKiB,EAAQC,IAAI,YAC/C,cAACV,EAAOH,WAAR,CAAmBU,GFRZ,UEQP,mCAGHL,KCVE,SAASS,IACpB,OACI,mCACI,cAACH,EAAD,wBCJL,SAASI,EAAT,GAAoE,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,aAAcZ,EAAqB,EAArBA,SAAaa,EAAQ,kDACxE,OACE,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,WACN,OAAKH,EAIDA,EAEA,cAAC,IAAD,CACEN,GAAI,CACFU,SAAUH,KAMX,KAbEZ,MCEF,SAASgB,IAAM,IAEnBL,ECTI,WAA4B,IAAD,EAChBM,mBAASC,KAAKC,MAAMC,aAAaC,QAAQ,cADzB,mBACjCV,EADiC,KAC3BW,EAD2B,KAEhCC,EAAaC,qBAAWvC,GAAxBsC,SAoBR,OAjBAE,qBAAU,WACR,IAAMC,EAAWH,EAASI,OAAOC,oBAAmB,SAACC,GAG/CA,GACFT,aAAaU,QAAQ,WAAYZ,KAAKa,UAAUF,IAChDP,EAAQO,KAGRT,aAAaY,WAAW,YACxBV,EAAQ,UAIZ,OAAO,kBAAMI,OACZ,IAEI,CAAEf,QDbSsB,GAATtB,KAET,OACE,cAAC,IAAD,UACG,cAAC,IAAD,UAEE,cAACD,EAAD,CAAgBC,KAAMA,EAAMC,aLlBf,UKkB4CsB,KLnB9C,IKmBX,SACC,cAACzB,EAAD,U,cElBG0B,EAAeC,YAAH,yV,iBCanBb,G,YAAWc,IAASC,cAVX,CACXC,OAAQ,0CACRC,WAAY,yCACZC,UAAW,yBACXC,cAAe,qCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,kBCDnB/B,iBACE,mCACE,eAAC7B,EAAgB6D,SAAjB,CAA0BC,MAAO,CAAExB,YAAnC,UACE,cAACY,EAAD,IACA,cAACnB,EAAD,SAGJgC,SAASC,eAAe,W","file":"static/js/main.16959277.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const FirebaseContext = createContext(null);\n","import styled from \"styled-components/macro\";\nimport {Link as ReachRouterLink } from \"react-router-dom\";\n \n\nexport const Background = styled.div`\n   display:flex;\n   flex-direction: column;\n   background: linear-gradient(to bottom, rgba(0, 0, 0, 0.35), rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.35)), url(${({ src }) => (src ? `../images/misc/${src}.jpg` : '../images/misc/home-bg.jpg')}) top left / cover\n   no-repeat;\n\n   @media (max-width: 1100px) {\n       ${({ dontShowOnSmallViewPort }) => dontShowOnSmallViewPort && `background: none;`}\n   }\n`;\n\nexport const Container = styled.div`\n  display:flex;\n  margin: 0 56px;\n  height: 100px;\n`;\n\nexport const Logo = styled.img`\n   height: 36px;\n   width: 134px;\n   margin-right: 40px;\n   @media (min-width: 1449px) {\n       height: 45px;\n       width: 167px;\n   }\n`;\n\nexport const ButtonLink = styled(ReachRouterLink)`\n   display:block;\n   background-color:#e50914;\n   width: 84px;\n   height: fit-content;\n   color:white;\n   border: 0;\n   font-size: 1rem;\n   border-radius: 3px;\n   padding: 8px 17px;\n   cursor: pointer;\n   text-decoration: none;\n   &: hover {\n     background: #f40612;\n   }\n`;\n\nexport const Group =  styled.div`\n   display: flex;\n   align-items:center;\n`;"," import React, {useState} from \"react\";\n import {Link as ReachRouteLink } from \"react-router-dom\";\nimport { \n    Background,\n    Container,\n    Logo,\n    ButtonLink,\n    Group\n} from \"./styles/header\";\n \n// Header의 배경화면\nexport default function Header({ bg = true, children, ...restProps }) {\n    return bg ? (\n      <Background data-testid=\"header-bg\" {...restProps}>\n        {children}\n      </Background>\n    ) : (\n      children\n    );\n  }\n\n// Frame 자식 요소\nHeader.Frame = function HeaderFrame({ children, ...restProps }) {\n    return <Container {...restProps}>{children}</Container>;\n}\n\nHeader.Grop = function HeaderGroup({ children, ...restProps }) {\n  return <Group {...restProps}>{children}</Group>\n}\n\n// 로고 자식요소들\nHeader.Logo = function HeaderLogo({ to, ...restProps }) {\n    return (\n        <ReachRouteLink to={to}>\n            <Logo {...restProps} />\n        </ReachRouteLink>\n    )\n}\n\nHeader.ButtonLink = function HeaderButtonLink({ children, ...restProps }) {\n  return <ButtonLink {...restProps}>{children}</ButtonLink>\n}\n\n","export const HOME = '/';\nexport const BROWSE = '/browse';\nexport const Sign_UP = '/signup';\nexport const SIGN_IN = '/signin';","export default __webpack_public_path__ + \"static/media/logo.5787551b.svg\";","import React from \"react\";\nimport { Header } from '../components';\nimport * as ROUTES from '../constants/routes';\nimport Images from \"../logo.svg\";\n\nexport function HeaderContainer({ children }) {\n    return (\n        <Header>\n            {/* 홈페이지 로고 버튼 && 로그인 이동버튼 */}\n            <Header.Frame>\n                <Header.Logo to={ROUTES.HOME} src={Images} alt=\"Netflix\" />\n                <Header.ButtonLink to={ROUTES.SIGN_IN}>로그인</Header.ButtonLink>\n            </Header.Frame>\n            {/* Header 첫 구간 children 항목 Header이라는 components들을 자식 항목 으로 받아온다. */}\n            {children}\n        </Header>\n    )\n}\n\n ","import React from 'react'\nimport { HeaderContainer } from '../containers/header'\n\n\nexport default function Home() {\n    return (\n        <>\n            <HeaderContainer>\n                     asdsads\n            </HeaderContainer>\n        </>\n    );\n}\n\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport function IsUserRedirect({ user, loggedInPath, children, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={() => {\n        if (!user) {\n          return children;\n        }\n\n        if (user) {\n          return (\n            <Redirect\n              to={{\n                pathname: loggedInPath,\n              }}\n            />\n          );\n        }\n\n        return null;\n      }}\n    />\n  );\n}\n\n// 보호된 경로 = 조건이 충족될때 보여질 항목 \nexport function ProtectedRoute({ user, children, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={({ location }) => {\n        if (user) {\n          return children;\n        }\n\n        if (!user) {\n          return (\n            <Redirect\n              to={{\n                pathname: 'signin',\n                state: { from: location },\n              }}\n            />\n          );\n        }\n\n        return null;\n      }}\n    />\n  );\n}\n","import React from 'react'\nimport { BrowserRouter as Router, Switch } from 'react-router-dom';\nimport { useAuthListener } from './hooks';\n\nimport { Home } from './pages';\n\nimport * as ROUTES  from \"./constants/routes\";\n\nimport { IsUserRedirect } from './helpers/routes';\n \n\nexport default function App() {\n  // 처음엔 useAuth로 연습 \n   const { user } = useAuthListener();\n\n  return (\n    <Router>\n       <Switch>\n         {/* 입력받을 유저와 로그인 경로를 불러옴 최종적으로 로그인 경로는 Browse로 가고 시작점은 SignIn 이다.*/}\n         <IsUserRedirect user={user} loggedInPath={ROUTES.BROWSE} path={ROUTES.HOME}>\n          <Home />\n        </IsUserRedirect>\n       \n         {/* <IsUserRedirect \n           user={user} \n           loggedInPath={ROUTES.BROWSE}\n           path={ROUTES.SIGN_IN}\n          >\n             <SignIn/>\n         </IsUserRedirect>\n          */}\n       </Switch>\n    </Router>\n  );\n}\n\n\n \n\n\n ","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useState, useEffect, useContext } from 'react';\nimport { FirebaseContext } from '../context/firebase';\n\nexport default function useAuthListener() {\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('authUser')));\n  const { firebase } = useContext(FirebaseContext);\n\n  \n  useEffect(() => {\n    const listener = firebase.auth().onAuthStateChanged((authUser) => {\n      // 로그인시 유저로 추가s\n      \n      if (authUser) {\n        localStorage.setItem('authUser', JSON.stringify(authUser));\n        setUser(authUser);\n       // 나갈시 삭제 \n      } else {\n        localStorage.removeItem('authUser');\n        setUser(null);\n      }\n    });\n\n    return () => listener();\n  }, []);\n\n  return { user };\n}\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyles = createGlobalStyle`\n  *, *:before, *:after {\n    box-sizing: border-box;\n  }\n  html, body {\n    height: 100%;\n    font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    background-color: #000000;\n    color: #fff;\n    font-size: 16px;\n}`;\n","import Firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n\nconst config = {\n    apiKey: \"AIzaSyBdEaVMOU0fAjgb_Gb1jd85OGtXrJFkf8w\",\n    authDomain: \"netflix-firebase-88bd4.firebaseapp.com\",\n    projectId: \"netflix-firebase-88bd4\",\n    storageBucket: \"netflix-firebase-88bd4.appspot.com\",\n    messagingSenderId: \"386999532203\",\n    appId: \"1:386999532203:web:37c7f7c58a34c6160b15ee\",\n    measurementId: \"G-5NWRR0FCNK\"\n}\n\nconst firebase = Firebase.initializeApp(config);\n\n\n\nexport { firebase };","import React from 'react';\nimport { render } from 'react-dom';\n// 기본 스타일 유지할 css \nimport 'normalize.css';\nimport App  from \"./app\";\nimport { GlobalStyles } from './global-styles';\nimport { firebase } from './lib/firebase.prod'\nimport { FirebaseContext } from './context/firebase';\n \n\n// 현재 어디서 랜더링할줄 모르기 때문에 \nrender(\n  <>\n    <FirebaseContext.Provider value={{ firebase }}>\n      <GlobalStyles />\n      <App />\n    </FirebaseContext.Provider>\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}