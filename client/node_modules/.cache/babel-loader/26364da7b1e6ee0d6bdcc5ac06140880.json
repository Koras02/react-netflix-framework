{"ast":null,"code":"var _jsxFileName = \"/home/kim/GitHub/Portfolio/react/movie-netflix-framework/src/Pages/Search/Search.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport Nav from \"../Nav/\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { createTheme } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport axios from \"axios\";\nimport { useDebouncedEffect } from \"./useDebouncedEffect\";\nimport \"./style/Search.css\";\nimport SingleMovie from \"../SingleMovie/SingleMovie\";\nimport PaginationComponent from \"../Pagination/PaginationComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Search = () => {\n  _s();\n\n  const darkTheme = createTheme({\n    palette: {\n      type: 'dark',\n      primary: {\n        main: '#fff'\n      }\n    }\n  });\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [numPages, setNumPages] = useState(0);\n  const [searchText, setSearchText] = useState('');\n  const [type, setType] = useState(0); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  function getMovies(page) {\n    axios({\n      method: \"GET\",\n      url: `https://api.themoviedb.org/3/search/${type ? 'tv' : 'movie'}?api_key=${process.env.REACT_APP_API_KEY}&language=ko-KR&query=${searchText}&page=${page}`\n    }).then(response => {\n      var _response$data$result;\n\n      setMovies((_response$data$result = response.data.results) !== null && _response$data$result !== void 0 ? _response$data$result : []);\n      setNumPages(response.data.total_pages);\n    }).catch(err => console.log(err.response));\n  }\n\n  useDebouncedEffect(() => {\n    getMovies(page);\n    setPage(1);\n  }, [searchText], 500);\n  useEffect(() => {\n    getMovies(page);\n  }, [type, page]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content_wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"page__search\",\n        children: \"\\uAC80\\uC0C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(ThemeProvider, {\n        theme: darkTheme,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search__container\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            style: {\n              flex: 1\n            },\n            className: `search__box`,\n            label: \"영화 검색\",\n            variant: 'filled',\n            value: searchText,\n            onChange: e => {\n              setSearchText(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: 'contained',\n            style: {\n              marginLeft: '10px'\n            },\n            onClick: getMovies,\n            children: /*#__PURE__*/_jsxDEV(SearchIcon, {\n              fontSize: \"large\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n          value: type,\n          indicatorColor: 'primary',\n          textColor: 'primary',\n          style: {\n            margin: \"0 auto\",\n            justifyContent: 'center',\n            paddingBottom: 5\n          },\n          onChange: (event, newValue) => {\n            setType(newValue);\n            setPage(1);\n          },\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            label: 'Movies',\n            style: {\n              width: \"50%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: 'TV series',\n            style: {\n              width: \"50%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movies\",\n        children: [movies.length > 0 && movies.map((movie, index) => /*#__PURE__*/_jsxDEV(SingleMovie, {\n          media_type: type ? \"tv\" : \"movie\",\n          id: movie.id,\n          movie: movie,\n          ...movie\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)), searchText && movies.length < 1 && (type ? /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"TV \\uAC80\\uC0C9\\uACB0\\uACFC\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uC601\\uD654 \\uAC80\\uC0C9\\uACB0\\uACFC\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), numPages > 1 && /*#__PURE__*/_jsxDEV(PaginationComponent, {\n        setPage: setPage,\n        numPages: numPages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n};\n\n_s(Search, \"yKn5n+tFGnEZ6LIiAvsUuwTC2pQ=\", false, function () {\n  return [useDebouncedEffect];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/home/kim/GitHub/Portfolio/react/movie-netflix-framework/src/Pages/Search/Search.js"],"names":["useState","useEffect","Nav","TextField","createTheme","ThemeProvider","Button","SearchIcon","Tabs","Tab","axios","useDebouncedEffect","SingleMovie","PaginationComponent","Search","darkTheme","palette","type","primary","main","movies","setMovies","page","setPage","numPages","setNumPages","searchText","setSearchText","setType","getMovies","method","url","process","env","REACT_APP_API_KEY","then","response","data","results","total_pages","catch","err","console","log","flex","e","target","value","marginLeft","margin","justifyContent","paddingBottom","event","newValue","width","length","map","movie","index","id"],"mappings":"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","sourcesContent":["import {useState, useEffect} from \"react\";\nimport Nav from \"../Nav/\";\nimport TextField  from \"@material-ui/core/TextField\";\nimport { createTheme } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport axios from \"axios\";\nimport { useDebouncedEffect } from \"./useDebouncedEffect\";\nimport \"./style/Search.css\";\nimport SingleMovie from \"../SingleMovie/SingleMovie\";\nimport PaginationComponent from \"../Pagination/PaginationComponent\";\n\n\n\nconst Search = () => {\n    const darkTheme = createTheme({\n        palette: {\n            type: 'dark',\n            primary: {\n                main: '#fff',\n            },\n        },\n    });\n\n\n    const [movies, setMovies] = useState([]);\n    const [page, setPage] = useState(1);\n    const [numPages, setNumPages] = useState(0);\n    const [searchText,setSearchText] = useState('');\n    const [type, setType] = useState(0);\n\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    function getMovies(page) {\n        axios({\n           method: \"GET\",\n           url: `https://api.themoviedb.org/3/search/${type?'tv':'movie'}?api_key=${process.env.REACT_APP_API_KEY}&language=ko-KR&query=${searchText}&page=${page}`\n\n        }).then(response => {\n            setMovies(response.data.results ?? [])\n            setNumPages(response.data.total_pages)\n            \n        }).catch(err => console.log(err.response))\n    }\n    useDebouncedEffect(() => {\n        getMovies(page);\n        setPage(1);\n    }, [searchText], 500);\n\n    useEffect(() => {\n        getMovies(page)\n    },[type,page]);\n\n    return (\n        <>\n          <div className=\"content_wrapper\">\n              <span className=\"page__search\">검색</span>\n              <ThemeProvider theme={darkTheme}>\n                  <div className=\"search__container\">\n                      <TextField style={{flex: 1}} className={`search__box`} label={\"영화 검색\"} variant={'filled'}\n                      value={searchText}\n                      onChange={(e) => {\n                          setSearchText(e.target.value)\n                      }} />\n                      <Button variant={'contained'} style={{marginLeft: '10px'}} onClick={getMovies}>\n                          <SearchIcon fontSize=\"large\"/>\n                      </Button>\n                      </div>\n            <Tabs \n                value={type}\n                indicatorColor={'primary'}\n                textColor={'primary'}\n                style={{margin: \"0 auto\", justifyContent: 'center', paddingBottom: 5}}\n                onChange={(event, newValue) => {\n                    setType(newValue);\n                    setPage(1);\n                }}>\n                 <Tab label={'Movies'} style={{width: \"50%\"}}/>\n                 <Tab label={'TV series'} style={{width: \"50%\"}}/>\n\n                </Tabs>\n        </ThemeProvider>\n        <div className=\"movies\">\n        {movies.length > 0 && movies.map((movie, index) => (\n                    <SingleMovie key={movie.id} media_type={type ? \"tv\" : \"movie\"} id={movie.id} movie={movie} {...movie} />\n                ))}\n          {searchText && movies.length<1 && (type ?\n                        <h2>TV 검색결과가 없습니다.</h2>:\n                        <h2>영화 검색결과가 없습니다.</h2>)}\n            </div>\n            {numPages>1 && (\n                <PaginationComponent setPage={setPage} numPages={numPages} />\n            )}\n            </div>\n    \n        </>\n    )\n\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}