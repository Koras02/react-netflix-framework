{"ast":null,"code":"import _objectSpread from\"/home/kim/GitHub/Portfolio/react/movie-netflix-framework/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/kim/GitHub/Portfolio/react/movie-netflix-framework/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from\"react\";import Nav from\"../Nav/\";import TextField from\"@material-ui/core/TextField\";import{createTheme}from\"@material-ui/core\";import{ThemeProvider}from\"@material-ui/styles\";import Button from\"@material-ui/core/Button\";import SearchIcon from\"@material-ui/icons/Search\";import Tabs from\"@material-ui/core/Tabs\";import Tab from\"@material-ui/core/Tab\";import axios from\"axios\";import{useDebouncedEffect}from\"./useDebouncedEffect\";import\"./style/Search.css\";import SingleMovie from\"../SingleMovie/SingleMovie\";import PaginationComponent from\"../Pagination/PaginationComponent\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Search=function Search(){var darkTheme=createTheme({palette:{type:'dark',primary:{main:'#fff'}}});var _useState=useState([]),_useState2=_slicedToArray(_useState,2),movies=_useState2[0],setMovies=_useState2[1];var _useState3=useState(1),_useState4=_slicedToArray(_useState3,2),page=_useState4[0],setPage=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),numPages=_useState6[0],setNumPages=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),searchText=_useState8[0],setSearchText=_useState8[1];var _useState9=useState(0),_useState10=_slicedToArray(_useState9,2),type=_useState10[0],setType=_useState10[1];// eslint-disable-next-line react-hooks/exhaustive-deps\nfunction getMovies(page){axios({method:\"GET\",url:\"https://api.themoviedb.org/3/search/\".concat(type?'tv':'movie',\"?api_key=\").concat(process.env.REACT_APP_API_KEY,\"&language=ko-KR&query=\").concat(searchText,\"&page=\").concat(page)}).then(function(response){var _response$data$result;setMovies((_response$data$result=response.data.results)!==null&&_response$data$result!==void 0?_response$data$result:[]);setNumPages(response.data.total_pages);}).catch(function(err){return console.log(err.response);});}useDebouncedEffect(function(){getMovies(page);setPage(1);},[searchText],500);useEffect(function(){getMovies(page);},[type,page,getMovies]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"content_wrapper\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"page__search\",children:\"\\uAC80\\uC0C9\"}),/*#__PURE__*/_jsxs(ThemeProvider,{theme:darkTheme,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"search__container\",children:[/*#__PURE__*/_jsx(TextField,{style:{flex:1},className:\"search__box\",label:\"영화 검색\",variant:'filled',value:searchText,onChange:function onChange(e){setSearchText(e.target.value);}}),/*#__PURE__*/_jsx(Button,{variant:'contained',style:{marginLeft:'10px'},onClick:getMovies,children:/*#__PURE__*/_jsx(SearchIcon,{fontSize:\"large\"})})]}),/*#__PURE__*/_jsxs(Tabs,{value:type,indicatorColor:'primary',textColor:'primary',style:{margin:\"0 auto\",justifyContent:'center',paddingBottom:5},onChange:function onChange(event,newValue){setType(newValue);setPage(1);},children:[/*#__PURE__*/_jsx(Tab,{label:'Movies',style:{width:\"50%\"}}),/*#__PURE__*/_jsx(Tab,{label:'TV series',style:{width:\"50%\"}})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"movies\",children:[movies.length>0&&movies.map(function(movie,index){return/*#__PURE__*/_jsx(SingleMovie,_objectSpread({media_type:type?\"tv\":\"movie\",id:movie.id,movie:movie},movie),movie.id);}),searchText&&movies.length<1&&(type?/*#__PURE__*/_jsx(\"h2\",{children:\"TV \\uAC80\\uC0C9\\uACB0\\uACFC\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"}):/*#__PURE__*/_jsx(\"h2\",{children:\"\\uC601\\uD654 \\uAC80\\uC0C9\\uACB0\\uACFC\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"}))]}),numPages>1&&/*#__PURE__*/_jsx(PaginationComponent,{setPage:setPage,numPages:numPages})]})});};export default Search;","map":{"version":3,"sources":["/home/kim/GitHub/Portfolio/react/movie-netflix-framework/src/Pages/Search/Search.js"],"names":["useState","useEffect","Nav","TextField","createTheme","ThemeProvider","Button","SearchIcon","Tabs","Tab","axios","useDebouncedEffect","SingleMovie","PaginationComponent","Search","darkTheme","palette","type","primary","main","movies","setMovies","page","setPage","numPages","setNumPages","searchText","setSearchText","setType","getMovies","method","url","process","env","REACT_APP_API_KEY","then","response","data","results","total_pages","catch","err","console","log","flex","e","target","value","marginLeft","margin","justifyContent","paddingBottom","event","newValue","width","length","map","movie","index","id"],"mappings":"6VAAA,OAAQA,QAAR,CAAkBC,SAAlB,KAAkC,OAAlC,CACA,MAAOC,CAAAA,GAAP,KAAgB,SAAhB,CACA,MAAOC,CAAAA,SAAP,KAAuB,6BAAvB,CACA,OAASC,WAAT,KAA4B,mBAA5B,CACA,OAASC,aAAT,KAA8B,qBAA9B,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,UAAP,KAAuB,2BAAvB,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,GAAP,KAAgB,uBAAhB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,kBAAT,KAAmC,sBAAnC,CACA,MAAO,oBAAP,CACA,MAAOC,CAAAA,WAAP,KAAwB,4BAAxB,CACA,MAAOC,CAAAA,mBAAP,KAAgC,mCAAhC,C,6IAIA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACjB,GAAMC,CAAAA,SAAS,CAAGX,WAAW,CAAC,CAC1BY,OAAO,CAAE,CACLC,IAAI,CAAE,MADD,CAELC,OAAO,CAAE,CACLC,IAAI,CAAE,MADD,CAFJ,CADiB,CAAD,CAA7B,CADiB,cAWWnB,QAAQ,CAAC,EAAD,CAXnB,wCAWVoB,MAXU,eAWFC,SAXE,8BAYOrB,QAAQ,CAAC,CAAD,CAZf,yCAYVsB,IAZU,eAYJC,OAZI,8BAaevB,QAAQ,CAAC,CAAD,CAbvB,yCAaVwB,QAbU,eAaAC,WAbA,8BAckBzB,QAAQ,CAAC,EAAD,CAd1B,yCAcV0B,UAdU,eAcCC,aAdD,8BAeO3B,QAAQ,CAAC,CAAD,CAff,0CAeViB,IAfU,gBAeJW,OAfI,gBAkBjB;AACA,QAASC,CAAAA,SAAT,CAAmBP,IAAnB,CAAyB,CACrBZ,KAAK,CAAC,CACHoB,MAAM,CAAE,KADL,CAEHC,GAAG,+CAAyCd,IAAI,CAAC,IAAD,CAAM,OAAnD,qBAAsEe,OAAO,CAACC,GAAR,CAAYC,iBAAlF,kCAA4HR,UAA5H,kBAA+IJ,IAA/I,CAFA,CAAD,CAAL,CAIGa,IAJH,CAIQ,SAAAC,QAAQ,CAAI,2BAChBf,SAAS,wBAACe,QAAQ,CAACC,IAAT,CAAcC,OAAf,+DAA0B,EAA1B,CAAT,CACAb,WAAW,CAACW,QAAQ,CAACC,IAAT,CAAcE,WAAf,CAAX,CAEH,CARD,EAQGC,KARH,CAQS,SAAAC,GAAG,QAAIC,CAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACL,QAAhB,CAAJ,EARZ,EASH,CACDzB,kBAAkB,CAAC,UAAM,CACrBkB,SAAS,CAACP,IAAD,CAAT,CACAC,OAAO,CAAC,CAAD,CAAP,CACH,CAHiB,CAGf,CAACG,UAAD,CAHe,CAGD,GAHC,CAAlB,CAKAzB,SAAS,CAAC,UAAM,CACZ4B,SAAS,CAACP,IAAD,CAAT,CACH,CAFQ,CAEP,CAACL,IAAD,CAAOK,IAAP,CAAaO,SAAb,CAFO,CAAT,CAIA,mBACI,sCACE,aAAK,SAAS,CAAC,iBAAf,wBACI,aAAM,SAAS,CAAC,cAAhB,0BADJ,cAEI,MAAC,aAAD,EAAe,KAAK,CAAEd,SAAtB,wBACI,aAAK,SAAS,CAAC,mBAAf,wBACI,KAAC,SAAD,EAAW,KAAK,CAAE,CAAC6B,IAAI,CAAE,CAAP,CAAlB,CAA6B,SAAS,cAAtC,CAAuD,KAAK,CAAE,OAA9D,CAAuE,OAAO,CAAE,QAAhF,CACA,KAAK,CAAElB,UADP,CAEA,QAAQ,CAAE,kBAACmB,CAAD,CAAO,CACblB,aAAa,CAACkB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb,CACH,CAJD,EADJ,cAMI,KAAC,MAAD,EAAQ,OAAO,CAAE,WAAjB,CAA8B,KAAK,CAAE,CAACC,UAAU,CAAE,MAAb,CAArC,CAA2D,OAAO,CAAEnB,SAApE,uBACI,KAAC,UAAD,EAAY,QAAQ,CAAC,OAArB,EADJ,EANJ,GADJ,cAWF,MAAC,IAAD,EACI,KAAK,CAAEZ,IADX,CAEI,cAAc,CAAE,SAFpB,CAGI,SAAS,CAAE,SAHf,CAII,KAAK,CAAE,CAACgC,MAAM,CAAE,QAAT,CAAmBC,cAAc,CAAE,QAAnC,CAA6CC,aAAa,CAAE,CAA5D,CAJX,CAKI,QAAQ,CAAE,kBAACC,KAAD,CAAQC,QAAR,CAAqB,CAC3BzB,OAAO,CAACyB,QAAD,CAAP,CACA9B,OAAO,CAAC,CAAD,CAAP,CACH,CARL,wBASK,KAAC,GAAD,EAAK,KAAK,CAAE,QAAZ,CAAsB,KAAK,CAAE,CAAC+B,KAAK,CAAE,KAAR,CAA7B,EATL,cAUK,KAAC,GAAD,EAAK,KAAK,CAAE,WAAZ,CAAyB,KAAK,CAAE,CAACA,KAAK,CAAE,KAAR,CAAhC,EAVL,GAXE,GAFJ,cA2BF,aAAK,SAAS,CAAC,QAAf,WACClC,MAAM,CAACmC,MAAP,CAAgB,CAAhB,EAAqBnC,MAAM,CAACoC,GAAP,CAAW,SAACC,KAAD,CAAQC,KAAR,qBACrB,KAAC,WAAD,gBAA4B,UAAU,CAAEzC,IAAI,CAAG,IAAH,CAAU,OAAtD,CAA+D,EAAE,CAAEwC,KAAK,CAACE,EAAzE,CAA6E,KAAK,CAAEF,KAApF,EAA+FA,KAA/F,EAAkBA,KAAK,CAACE,EAAxB,CADqB,EAAX,CADtB,CAIGjC,UAAU,EAAIN,MAAM,CAACmC,MAAP,CAAc,CAA5B,GAAkCtC,IAAI,cACzB,mFADyB,cAEzB,6FAFb,CAJH,GA3BE,CAmCGO,QAAQ,CAAC,CAAT,eACG,KAAC,mBAAD,EAAqB,OAAO,CAAED,OAA9B,CAAuC,QAAQ,CAAEC,QAAjD,EApCN,GADF,EADJ,CA6CH,CApFD,CAsFA,cAAeV,CAAAA,MAAf","sourcesContent":["import {useState, useEffect} from \"react\";\nimport Nav from \"../Nav/\";\nimport TextField  from \"@material-ui/core/TextField\";\nimport { createTheme } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport axios from \"axios\";\nimport { useDebouncedEffect } from \"./useDebouncedEffect\";\nimport \"./style/Search.css\";\nimport SingleMovie from \"../SingleMovie/SingleMovie\";\nimport PaginationComponent from \"../Pagination/PaginationComponent\";\n\n\n\nconst Search = () => {\n    const darkTheme = createTheme({\n        palette: {\n            type: 'dark',\n            primary: {\n                main: '#fff',\n            },\n        },\n    });\n\n\n    const [movies, setMovies] = useState([]);\n    const [page, setPage] = useState(1);\n    const [numPages, setNumPages] = useState(0);\n    const [searchText,setSearchText] = useState('');\n    const [type, setType] = useState(0);\n\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    function getMovies(page) {\n        axios({\n           method: \"GET\",\n           url: `https://api.themoviedb.org/3/search/${type?'tv':'movie'}?api_key=${process.env.REACT_APP_API_KEY}&language=ko-KR&query=${searchText}&page=${page}`\n\n        }).then(response => {\n            setMovies(response.data.results ?? [])\n            setNumPages(response.data.total_pages)\n            \n        }).catch(err => console.log(err.response))\n    }\n    useDebouncedEffect(() => {\n        getMovies(page);\n        setPage(1);\n    }, [searchText], 500);\n\n    useEffect(() => {\n        getMovies(page)\n    },[type, page, getMovies]);\n\n    return (\n        <>\n          <div className=\"content_wrapper\">\n              <span className=\"page__search\">검색</span>\n              <ThemeProvider theme={darkTheme}>\n                  <div className=\"search__container\">\n                      <TextField style={{flex: 1}} className={`search__box`} label={\"영화 검색\"} variant={'filled'}\n                      value={searchText}\n                      onChange={(e) => {\n                          setSearchText(e.target.value)\n                      }} />\n                      <Button variant={'contained'} style={{marginLeft: '10px'}} onClick={getMovies}>\n                          <SearchIcon fontSize=\"large\"/>\n                      </Button>\n                      </div>\n            <Tabs \n                value={type}\n                indicatorColor={'primary'}\n                textColor={'primary'}\n                style={{margin: \"0 auto\", justifyContent: 'center', paddingBottom: 5}}\n                onChange={(event, newValue) => {\n                    setType(newValue);\n                    setPage(1);\n                }}>\n                 <Tab label={'Movies'} style={{width: \"50%\"}}/>\n                 <Tab label={'TV series'} style={{width: \"50%\"}}/>\n\n                </Tabs>\n        </ThemeProvider>\n        <div className=\"movies\">\n        {movies.length > 0 && movies.map((movie, index) => (\n                    <SingleMovie key={movie.id} media_type={type ? \"tv\" : \"movie\"} id={movie.id} movie={movie} {...movie} />\n                ))}\n          {searchText && movies.length<1 && (type ?\n                        <h2>TV 검색결과가 없습니다.</h2>:\n                        <h2>영화 검색결과가 없습니다.</h2>)}\n            </div>\n            {numPages>1 && (\n                <PaginationComponent setPage={setPage} numPages={numPages} />\n            )}\n            </div>\n    \n        </>\n    )\n\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}