{"ast":null,"code":"var _jsxFileName = \"/home/kim/GitHub/Portfolio/react/movie-netflix-framework/src/Pages/SingleMovie/SingleMovie.js\",\n    _s = $RefreshSig$();\n\nimport { img_300, unavailable } from \"../../axios/config/config\";\nimport Beadg from \"@material-ui/core/Badge\";\nimport { useContext } from \"react\";\nimport { GlobalContext } from \"../../context/GlobalState\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SingleMovie = ({\n  movie,\n  id,\n  title,\n  poster_path,\n  media_type,\n  first_air_date,\n  release_date,\n  original_title,\n  name,\n  original_name,\n  backdrop_path,\n  vote_average\n}) => {\n  _s();\n\n  var _false, _false2;\n\n  const {\n    add_Movie_to_watchlist,\n    remove_Movie_from_watchlist,\n    add_Movie_to_watched,\n    move_to_watchlist,\n    watchlist,\n    watched\n  } = useContext(GlobalContext);\n  let storedMovie = (watchlist === null || watchlist === void 0 ? void 0 : watchlist.find(o => o.id === movie.id)) ? true : (_false = false) !== null && _false !== void 0 ? _false : false;\n  let watchedMovie = (watched === null || watched === void 0 ? void 0 : watched.find(o => o.id === movie.id)) ? true : (_false2 = false) !== null && _false2 !== void 0 ? _false2 : false;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"handler\",\n      children: !watchedMovie === 'watchlist_page' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: 'fa-fw far fa-eye single_movie__icon watch_page__icon',\n          onClick: () => add_Movie_to_watched(movie)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 16\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 8\n    }, this)\n  }, void 0, false);\n};\n\n_s(SingleMovie, \"BYHr3m337fmzkO+R3M9WqODAFOg=\");\n\n_c = SingleMovie;\nexport default SingleMovie;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleMovie\");","map":{"version":3,"sources":["/home/kim/GitHub/Portfolio/react/movie-netflix-framework/src/Pages/SingleMovie/SingleMovie.js"],"names":["img_300","unavailable","Beadg","useContext","GlobalContext","SingleMovie","movie","id","title","poster_path","media_type","first_air_date","release_date","original_title","name","original_name","backdrop_path","vote_average","add_Movie_to_watchlist","remove_Movie_from_watchlist","add_Movie_to_watched","move_to_watchlist","watchlist","watched","storedMovie","find","o","watchedMovie"],"mappings":";;;AAAA,SAASA,OAAT,EAAkBC,WAAlB,QAAqC,2BAArC;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,aAAT,QAA8B,2BAA9B;;;;AAGA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,EAAR;AAAYC,EAAAA,KAAZ;AAAmBC,EAAAA,WAAnB;AAAgCC,EAAAA,UAAhC;AAA4CC,EAAAA,cAA5C;AAA4DC,EAAAA,YAA5D;AAA0EC,EAAAA,cAA1E;AAA0FC,EAAAA,IAA1F;AAAgGC,EAAAA,aAAhG;AAA+GC,EAAAA,aAA/G;AAA8HC,EAAAA;AAA9H,CAAD,KAAkJ;AAAA;;AAAA;;AACpK,QAAM;AACJC,IAAAA,sBADI;AAEJC,IAAAA,2BAFI;AAGJC,IAAAA,oBAHI;AAIJC,IAAAA,iBAJI;AAKJC,IAAAA,SALI;AAMJC,IAAAA;AANI,MASJpB,UAAU,CAACC,aAAD,CATZ;AAWF,MAAIoB,WAAW,GAAG,CAAAF,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEG,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACnB,EAAF,KAASD,KAAK,CAACC,EAApC,KAA0C,IAA1C,aAAiD,KAAjD,2CAA0D,KAA5E;AACA,MAAIoB,YAAY,GAAG,CAAAJ,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEE,IAAT,CAAcC,CAAC,IAAIA,CAAC,CAACnB,EAAF,KAASD,KAAK,CAACC,EAAlC,KAAwC,IAAxC,cAA+C,KAA/C,6CAAwD,KAA3E;AAEA,sBACI;AAAA,2BACG;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,gBACK,CAACoB,YAAD,KAAkB,gBAAlB,iBACC;AAAA,+BACE;AAAG,UAAA,SAAS,EAAE,sDAAd;AAAsE,UAAA,OAAO,EAAE,MAAOP,oBAAoB,CAACd,KAAD;AAA1G;AAAA;AAAA;AAAA;AAAA;AADF;AAFN;AAAA;AAAA;AAAA;AAAA;AADH,mBADJ;AAYC,CA3BD;;GAAMD,W;;KAAAA,W;AA6BN,eAAeA,WAAf","sourcesContent":["import { img_300, unavailable } from \"../../axios/config/config\";\nimport Beadg from \"@material-ui/core/Badge\";\nimport { useContext } from \"react\";\nimport { GlobalContext } from \"../../context/GlobalState\";\n\n\nconst SingleMovie = ({movie, id, title, poster_path, media_type, first_air_date, release_date, original_title, name, original_name, backdrop_path, vote_average }) => { \n  const {\n    add_Movie_to_watchlist,\n    remove_Movie_from_watchlist,\n    add_Movie_to_watched,\n    move_to_watchlist,\n    watchlist,\n    watched\n\n\n} = useContext(GlobalContext)\n  \nlet storedMovie = watchlist?.find(o => o.id === movie.id) ? true : false ?? false;\nlet watchedMovie = watched?.find(o => o.id === movie.id) ? true : false ?? false;\n\nreturn (\n    <>\n       <div className=\"handler\">\n           {!watchedMovie === 'watchlist_page' && \n             <>\n               <i className={'fa-fw far fa-eye single_movie__icon watch_page__icon'} onClick={() => (add_Movie_to_watched(movie))}></i>\n               &#32;\n             </>\n           }\n       </div>\n    </>\n)\n}\n\nexport default SingleMovie;"]},"metadata":{},"sourceType":"module"}