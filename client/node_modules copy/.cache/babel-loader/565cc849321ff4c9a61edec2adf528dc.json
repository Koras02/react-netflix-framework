{"ast":null,"code":"import _slicedToArray from\"/home/kim/GitHub/Portfolio/react/movie-netflix-framework/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{createContext,useReducer,useEffect}from\"react\";import AppReducer from\"./AppReducer\";//initial state\nimport{jsx as _jsx}from\"react/jsx-runtime\";var initialState={watchlist:localStorage.getItem('watchlist')?JSON.parse(localStorage.getItem('watchlist')):[],watched:localStorage.getItem('watched')?JSON.parse(localStorage.getItem('watched')):[]};// create Context\nexport var GlobalContext=/*#__PURE__*/createContext(initialState);// provider component\nexport var GlobalProvider=function GlobalProvider(props){var _useReducer=useReducer(AppReducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];//store our movies in localStorage\nuseEffect(function(){localStorage.setItem('watchlist',JSON.stringify(state.watchlist));localStorage.setItem('watched',JSON.stringify(state.watched));},[state]);//actions\nvar add_Movie_to_watchlist=function add_Movie_to_watchlist(movie){dispatch({type:\"ADD_MOVIE_TO_WATCHLIST\",payload:movie});};var remove_Movie_from_watchlist=function remove_Movie_from_watchlist(id){dispatch({type:\"REMOVE_MOVIE_FROM_WATCHLIST\",payload:id});};var add_Movie_to_watched=function add_Movie_to_watched(movie){dispatch({type:\"ADD_MOVIE_TO_WATCHED\",payload:movie});};var move_to_watchlist=function move_to_watchlist(movie){dispatch({type:\"MOVE_TO_WATCHLIST\",payload:movie});};var remove_from_watched=function remove_from_watched(id){dispatch({type:\"REMOVE_FROM_WATCHED\",payload:id});};return/*#__PURE__*/_jsx(GlobalContext.Provider,{value:{watchlist:state.watchlist,watched:state.watched,add_Movie_to_watchlist:add_Movie_to_watchlist,remove_Movie_from_watchlist:remove_Movie_from_watchlist,add_Movie_to_watched:add_Movie_to_watched,move_to_watchlist:move_to_watchlist,remove_from_watched:remove_from_watched},children:props.children});};","map":{"version":3,"sources":["/home/kim/GitHub/Portfolio/react/movie-netflix-framework/src/context/GlobalState.js"],"names":["React","createContext","useReducer","useEffect","AppReducer","initialState","watchlist","localStorage","getItem","JSON","parse","watched","GlobalContext","GlobalProvider","props","state","dispatch","setItem","stringify","add_Movie_to_watchlist","movie","type","payload","remove_Movie_from_watchlist","id","add_Movie_to_watched","move_to_watchlist","remove_from_watched","children"],"mappings":"+KAAA,MAAOA,CAAAA,KAAP,EAAcC,aAAd,CAA6BC,UAA7B,CAAyCC,SAAzC,KAAyD,OAAzD,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CAGA;2CACA,GAAMC,CAAAA,YAAY,CAAG,CACjBC,SAAS,CAAEC,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAoCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAApC,CAAoF,EAD9E,CAEjBG,OAAO,CAAEJ,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAkCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAlC,CAAgF,EAFxE,CAArB,CAKA;AACA,MAAO,IAAMI,CAAAA,aAAa,cAAGX,aAAa,CAACI,YAAD,CAAnC,CAEP;AACA,MAAO,IAAMQ,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,CAAU,iBACXZ,UAAU,CAACE,UAAD,CAAaC,YAAb,CADC,4CAC7BU,KAD6B,iBACvBC,QADuB,iBAGpC;AACAb,SAAS,CAAC,UAAI,CACVI,YAAY,CAACU,OAAb,CAAqB,WAArB,CAAiCR,IAAI,CAACS,SAAL,CAAeH,KAAK,CAACT,SAArB,CAAjC,EACAC,YAAY,CAACU,OAAb,CAAqB,SAArB,CAA+BR,IAAI,CAACS,SAAL,CAAeH,KAAK,CAACJ,OAArB,CAA/B,EACH,CAHQ,CAGP,CAACI,KAAD,CAHO,CAAT,CAKA;AACA,GAAMI,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACC,KAAD,CAAU,CACrCJ,QAAQ,CAAC,CAACK,IAAI,CAAC,wBAAN,CAAgCC,OAAO,CAAEF,KAAzC,CAAD,CAAR,CACH,CAFD,CAGA,GAAMG,CAAAA,2BAA2B,CAAG,QAA9BA,CAAAA,2BAA8B,CAACC,EAAD,CAAO,CACvCR,QAAQ,CAAC,CAACK,IAAI,CAAC,6BAAN,CAAqCC,OAAO,CAAEE,EAA9C,CAAD,CAAR,CACH,CAFD,CAGA,GAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACL,KAAD,CAAU,CACnCJ,QAAQ,CAAC,CAACK,IAAI,CAAC,sBAAN,CAA8BC,OAAO,CAAEF,KAAvC,CAAD,CAAR,CACH,CAFD,CAGA,GAAMM,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACN,KAAD,CAAU,CAChCJ,QAAQ,CAAC,CAACK,IAAI,CAAC,mBAAN,CAA2BC,OAAO,CAAEF,KAApC,CAAD,CAAR,CACH,CAFD,CAGA,GAAMO,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACH,EAAD,CAAO,CAC/BR,QAAQ,CAAC,CAACK,IAAI,CAAC,qBAAN,CAA6BC,OAAO,CAAEE,EAAtC,CAAD,CAAR,CACH,CAFD,CAIA,mBACI,KAAC,aAAD,CAAe,QAAf,EACI,KAAK,CAAE,CACHlB,SAAS,CAAES,KAAK,CAACT,SADd,CAEHK,OAAO,CAAEI,KAAK,CAACJ,OAFZ,CAGHQ,sBAAsB,CAAtBA,sBAHG,CAIHI,2BAA2B,CAA3BA,2BAJG,CAKHE,oBAAoB,CAApBA,oBALG,CAMHC,iBAAiB,CAAjBA,iBANG,CAOHC,mBAAmB,CAAnBA,mBAPG,CADX,UAUKb,KAAK,CAACc,QAVX,EADJ,CAcH,CAxCM","sourcesContent":["import React,{createContext, useReducer, useEffect} from \"react\";\nimport AppReducer from \"./AppReducer\";\n\n\n//initial state\nconst initialState = {\n    watchlist: localStorage.getItem('watchlist') ? JSON.parse(localStorage.getItem('watchlist')) : [],\n    watched: localStorage.getItem('watched') ? JSON.parse(localStorage.getItem('watched')) : [],\n};\n\n// create Context\nexport const GlobalContext = createContext(initialState);\n\n// provider component\nexport const GlobalProvider = (props) =>{\n    const [state,dispatch] = useReducer(AppReducer, initialState);\n\n    //store our movies in localStorage\n    useEffect(()=>{\n        localStorage.setItem('watchlist',JSON.stringify(state.watchlist))\n        localStorage.setItem('watched',JSON.stringify(state.watched))\n    },[state])\n\n    //actions\n    const add_Movie_to_watchlist = (movie) =>{\n        dispatch({type:\"ADD_MOVIE_TO_WATCHLIST\", payload: movie});\n    }\n    const remove_Movie_from_watchlist = (id) =>{\n        dispatch({type:\"REMOVE_MOVIE_FROM_WATCHLIST\", payload: id});\n    }\n    const add_Movie_to_watched = (movie) =>{\n        dispatch({type:\"ADD_MOVIE_TO_WATCHED\", payload: movie});\n    }\n    const move_to_watchlist = (movie) =>{\n        dispatch({type:\"MOVE_TO_WATCHLIST\", payload: movie});\n    }\n    const remove_from_watched = (id) =>{\n        dispatch({type:\"REMOVE_FROM_WATCHED\", payload: id})\n    }\n\n    return(\n        <GlobalContext.Provider\n            value={{\n                watchlist: state.watchlist,\n                watched: state.watched,\n                add_Movie_to_watchlist,\n                remove_Movie_from_watchlist,\n                add_Movie_to_watched,\n                move_to_watchlist,\n                remove_from_watched,\n            }}>\n            {props.children}\n        </GlobalContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}