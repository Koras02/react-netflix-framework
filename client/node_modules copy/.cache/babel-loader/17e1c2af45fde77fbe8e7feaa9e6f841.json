{"ast":null,"code":"var _jsxFileName = \"/home/kim/GitHub/Portfolio/react/movie-netflix-framework/src/Pages/Tv/Tv.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { api_key } from '../../axios/urls';\nimport SingleMovie from \"../SingleMovie/SingleMovie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Tv = () => {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [numPages, setNumPages] = useState(10);\n\n  function getMovies(page) {\n    axios({\n      method: \"GET\",\n      url: `https://api.themoviedb.org/3/discover/tv?api_key=${api_key}&language=ko&region=ko&sort_by=popularity.desc&include_adult=false&include_video=false&page=${page}`\n    }).then(response => {\n      var _response$data$result;\n\n      setMovies((_response$data$result = response.data.results) !== null && _response$data$result !== void 0 ? _response$data$result : []);\n      setNumPages(response.data.total_pages);\n    });\n  }\n\n  useEffect(() => {\n    getMovies(page);\n  }, [page]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"tv_container\",\n      children: \"TV \\uD504\\uB85C\\uADF8\\uB7A8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movies\",\n      children: movies.length > 0 && movies.map((movie, index) => /*#__PURE__*/_jsxDEV(SingleMovie, {\n        media_type: 'tv'\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 20\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Tv, \"dIWJHCKCS4YtLHlz949HaYh9Xjo=\");\n\n_c = Tv;\nexport default Tv;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tv\");","map":{"version":3,"sources":["/home/kim/GitHub/Portfolio/react/movie-netflix-framework/src/Pages/Tv/Tv.js"],"names":["React","useEffect","useState","axios","api_key","SingleMovie","Tv","movies","setMovies","page","setPage","numPages","setNumPages","getMovies","method","url","then","response","data","results","total_pages","length","map","movie","index","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;;;;AAGA,MAAMC,EAAE,GAAG,MAAM;AAAA;;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;;AAEA,WAASW,SAAT,CAAmBJ,IAAnB,EAAyB;AACrBN,IAAAA,KAAK,CAAC;AACFW,MAAAA,MAAM,EAAE,KADN;AAEFC,MAAAA,GAAG,EAAG,oDAAmDX,OAAQ,+FAA8FK,IAAK;AAFlK,KAAD,CAAL,CAGGO,IAHH,CAGQC,QAAQ,IAAI;AAAA;;AAChBT,MAAAA,SAAS,0BAACS,QAAQ,CAACC,IAAT,CAAcC,OAAf,yEAA0B,EAA1B,CAAT;AACAP,MAAAA,WAAW,CAACK,QAAQ,CAACC,IAAT,CAAcE,WAAf,CAAX;AACH,KAND;AAOH;;AAEDnB,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,SAAS,CAACJ,IAAD,CAAT;AACH,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;AAIA,sBACI;AAAA,4BACG;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,eAMG;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,gBACKF,MAAM,CAACc,MAAP,GAAgB,CAAhB,IAAqBd,MAAM,CAACe,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,kBAC7B,QAAC,WAAD;AAA4B,QAAA,UAAU,EAAE;AAAxC,SAAkBD,KAAK,CAACE,EAAxB;AAAA;AAAA;AAAA;AAAA,cADkB;AAD1B;AAAA;AAAA;AAAA;AAAA,YANH;AAAA,kBADJ;AAcH,CAjCD;;GAAMnB,E;;KAAAA,E;AAmCN,eAAeA,EAAf","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport axios from \"axios\"; \nimport { api_key } from '../../axios/urls';\nimport SingleMovie from \"../SingleMovie/SingleMovie\"\n \n\nconst Tv = () => {\n    const [movies, setMovies] = useState([]);\n    const [page, setPage] = useState(1);\n    const [numPages, setNumPages] = useState(10);\n\n    function getMovies(page) {\n        axios({\n            method: \"GET\",\n            url: `https://api.themoviedb.org/3/discover/tv?api_key=${api_key}&language=ko&region=ko&sort_by=popularity.desc&include_adult=false&include_video=false&page=${page}`\n        }).then(response => {\n            setMovies(response.data.results ?? [])\n            setNumPages(response.data.total_pages)\n        })\n    }\n\n    useEffect(() => {\n        getMovies(page);\n    }, [page])\n     \n    return (\n        <>\n           <span className=\"tv_container\">\n              TV 프로그램\n           </span>\n\n\n           <div className=\"movies\">\n               {movies.length > 0 && movies.map((movie, index) => (\n                   <SingleMovie key={movie.id} media_type={'tv'}  />\n               ))}\n           </div>\n        </>\n    )\n}\n\nexport default Tv\n"]},"metadata":{},"sourceType":"module"}