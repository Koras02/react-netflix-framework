{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport Nav from \"../Nav/\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { createTheme } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport Button from \"@material-ui/core/styles\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport axios from \"axios\";\nimport { useDebouncedEffect } from \"./useDebouncedEffect\";\nimport \"./style/Search.css\";\nimport SingleMovie from \"../SingleMovie/SingleMovie\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = () => {\n  _s();\n\n  const darkTheme = createTheme({\n    palette: {\n      type: 'dark',\n      primary: {\n        main: '#fff'\n      }\n    }\n  });\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [numPages, setNumPages] = useState(0);\n  const [searchText, setSearchText] = useState('');\n  const [type, setType] = useState(0); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  function getMovies(page) {\n    axios({\n      method: \"GET\",\n      url: `https://api.themoviedb.org/3/search/${type ? 'tv' : 'movie'}?api_key=${process.env.REACT_APP_API_KEY}&language=ko-KR&query=${searchText}&page=${page}`\n    }).then(response => {\n      var _response$data$result;\n\n      setMovies((_response$data$result = response.data.results) !== null && _response$data$result !== void 0 ? _response$data$result : []);\n      setNumPages(response.data.total_pages);\n    }).catch(err => console.log(err.response));\n  }\n\n  useDebouncedEffect(() => {\n    getMovies(page);\n    setPage(1);\n  }, [searchText], 500);\n  useEffect(() => {\n    getMovies(page);\n  }, [type, page]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(Search, \"yKn5n+tFGnEZ6LIiAvsUuwTC2pQ=\", false, function () {\n  return [useDebouncedEffect];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/home/kim/GitHub/Portfolio/react/movie-netflix-framework/src/Pages/Search/Search.js"],"names":["useState","useEffect","Nav","TextField","createTheme","ThemeProvider","Button","SearchIcon","Tabs","Tab","axios","useDebouncedEffect","SingleMovie","Search","darkTheme","palette","type","primary","main","movies","setMovies","page","setPage","numPages","setNumPages","searchText","setSearchText","setType","getMovies","method","url","process","env","REACT_APP_API_KEY","then","response","data","results","total_pages","catch","err","console","log"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,GAAP,MAAgB,SAAhB;AACA,OAAOC,SAAP,MAAuB,6BAAvB;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AACA,OAAO,oBAAP;AACA,OAAOC,WAAP,MAAwB,4BAAxB;;;;AAGA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAMC,SAAS,GAAGV,WAAW,CAAC;AAC1BW,IAAAA,OAAO,EAAE;AACLC,MAAAA,IAAI,EAAE,MADD;AAELC,MAAAA,OAAO,EAAE;AACLC,QAAAA,IAAI,EAAE;AADD;AAFJ;AADiB,GAAD,CAA7B;AAUA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBpB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACqB,IAAD,EAAOC,OAAP,IAAkBtB,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACuB,QAAD,EAAWC,WAAX,IAA0BxB,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACyB,UAAD,EAAYC,aAAZ,IAA6B1B,QAAQ,CAAC,EAAD,CAA3C;AACA,QAAM,CAACgB,IAAD,EAAOW,OAAP,IAAkB3B,QAAQ,CAAC,CAAD,CAAhC,CAfiB,CAkBjB;;AACA,WAAS4B,SAAT,CAAmBP,IAAnB,EAAyB;AACrBX,IAAAA,KAAK,CAAC;AACHmB,MAAAA,MAAM,EAAE,KADL;AAEHC,MAAAA,GAAG,EAAG,uCAAsCd,IAAI,GAAC,IAAD,GAAM,OAAQ,YAAWe,OAAO,CAACC,GAAR,CAAYC,iBAAkB,yBAAwBR,UAAW,SAAQJ,IAAK;AAFpJ,KAAD,CAAL,CAIGa,IAJH,CAIQC,QAAQ,IAAI;AAAA;;AAChBf,MAAAA,SAAS,0BAACe,QAAQ,CAACC,IAAT,CAAcC,OAAf,yEAA0B,EAA1B,CAAT;AACAb,MAAAA,WAAW,CAACW,QAAQ,CAACC,IAAT,CAAcE,WAAf,CAAX;AAEH,KARD,EAQGC,KARH,CAQSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACL,QAAhB,CARhB;AASH;;AACDxB,EAAAA,kBAAkB,CAAC,MAAM;AACrBiB,IAAAA,SAAS,CAACP,IAAD,CAAT;AACAC,IAAAA,OAAO,CAAC,CAAD,CAAP;AACH,GAHiB,EAGf,CAACG,UAAD,CAHe,EAGD,GAHC,CAAlB;AAKAxB,EAAAA,SAAS,CAAC,MAAM;AACZ2B,IAAAA,SAAS,CAACP,IAAD,CAAT;AACH,GAFQ,EAEP,CAACL,IAAD,EAAMK,IAAN,CAFO,CAAT;AAIA,sBACI,qCADJ;AAKH,CA5CD;;GAAMR,M;UA8BFF,kB;;;KA9BEE,M;AA8CN,eAAeA,MAAf","sourcesContent":["import {useState, useEffect} from \"react\";\nimport Nav from \"../Nav/\";\nimport TextField  from \"@material-ui/core/TextField\";\nimport { createTheme } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport Button from \"@material-ui/core/styles\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport axios from \"axios\";\nimport { useDebouncedEffect } from \"./useDebouncedEffect\";\nimport \"./style/Search.css\";\nimport SingleMovie from \"../SingleMovie/SingleMovie\";\n\n\nconst Search = () => {\n    const darkTheme = createTheme({\n        palette: {\n            type: 'dark',\n            primary: {\n                main: '#fff',\n            },\n        },\n    });\n\n\n    const [movies, setMovies] = useState([]);\n    const [page, setPage] = useState(1);\n    const [numPages, setNumPages] = useState(0);\n    const [searchText,setSearchText] = useState('');\n    const [type, setType] = useState(0);\n\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    function getMovies(page) {\n        axios({\n           method: \"GET\",\n           url: `https://api.themoviedb.org/3/search/${type?'tv':'movie'}?api_key=${process.env.REACT_APP_API_KEY}&language=ko-KR&query=${searchText}&page=${page}`\n\n        }).then(response => {\n            setMovies(response.data.results ?? [])\n            setNumPages(response.data.total_pages)\n            \n        }).catch(err => console.log(err.response))\n    }\n    useDebouncedEffect(() => {\n        getMovies(page);\n        setPage(1);\n    }, [searchText], 500);\n\n    useEffect(() => {\n        getMovies(page)\n    },[type,page]);\n\n    return (\n        <>\n        </>\n    )\n\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}