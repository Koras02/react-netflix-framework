[{"/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/index.js":"1","/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/App.js":"2","/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/context/GlobalState.js":"3","/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/Pages/Trending/Trending.js":"4","/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/Pages/Movie/Movie.js":"5","/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/Pages/Search/Search.js":"6","/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/Pages/Tv/Tv.js":"7","/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/Pages/Nav/index.js":"8","/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/context/AppReducer.js":"9","/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/Pages/Search/useDebouncedEffect.js":"10","/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/Pages/SingleMovie/SingleMovie.js":"11","/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/Pages/Pagination/PaginationComponent.js":"12","/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/axios/urls.js":"13","/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/axios/config/config.js":"14","/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/Pages/FocusModal/ContentFocus.js":"15","/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/Pages/Nav/Main/index.js":"16","/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/Pages/Carousel/Carousel.js":"17","/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/Pages/Nav/Main/Main.styled.js":"18","/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/Pages/Nav/Main/Left.js":"19","/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/Pages/Nav/Main/variables.js":"20","/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/Pages/Nav/Main/route/routeList.js":"21"},{"size":264,"mtime":1630634013050,"results":"22","hashOfConfig":"23"},{"size":1086,"mtime":1630649015633,"results":"24","hashOfConfig":"23"},{"size":1800,"mtime":1630628196154,"results":"25","hashOfConfig":"23"},{"size":1272,"mtime":1630639749542,"results":"26","hashOfConfig":"23"},{"size":1427,"mtime":1630645733908,"results":"27","hashOfConfig":"23"},{"size":3669,"mtime":1630644829432,"results":"28","hashOfConfig":"23"},{"size":1404,"mtime":1630642214940,"results":"29","hashOfConfig":"23"},{"size":41,"mtime":1630639794926,"results":"30","hashOfConfig":"23"},{"size":1182,"mtime":1630628192230,"results":"31","hashOfConfig":"23"},{"size":317,"mtime":1630644343487,"results":"32","hashOfConfig":"23"},{"size":2829,"mtime":1630652240148,"results":"33","hashOfConfig":"23"},{"size":1069,"mtime":1630645463804,"results":"34","hashOfConfig":"23"},{"size":373,"mtime":1630628704643,"results":"35","hashOfConfig":"23"},{"size":594,"mtime":1630629500428,"results":"36","hashOfConfig":"23"},{"size":6673,"mtime":1630645236188,"results":"37","hashOfConfig":"23"},{"size":271,"mtime":1630637386000,"results":"38","hashOfConfig":"23"},{"size":1803,"mtime":1630632459568,"results":"39","hashOfConfig":"23"},{"size":1357,"mtime":1630642491384,"results":"40","hashOfConfig":"23"},{"size":3450,"mtime":1630646861814,"results":"41","hashOfConfig":"23"},{"size":388,"mtime":1630637267941,"results":"42","hashOfConfig":"23"},{"size":322,"mtime":1630641080728,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"lq93wg",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/index.js",[],["93","94"],"/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/App.js",[],"/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/context/GlobalState.js",[],"/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/Pages/Trending/Trending.js",[],"/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/Pages/Movie/Movie.js",[],"/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/Pages/Search/Search.js",["95"],"import {useState, useEffect} from \"react\";\nimport Nav from \"../Nav/\";\nimport TextField  from \"@material-ui/core/TextField\";\nimport { createTheme } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport axios from \"axios\";\nimport { useDebouncedEffect } from \"./useDebouncedEffect\";\nimport \"./style/Search.css\";\nimport SingleMovie from \"../SingleMovie/SingleMovie\";\nimport PaginationComponent from \"../Pagination/PaginationComponent\";\n\n\n\nconst Search = () => {\n    const darkTheme = createTheme({\n        palette: {\n            type: 'dark',\n            primary: {\n                main: '#fff',\n            },\n        },\n    });\n\n\n    const [movies, setMovies] = useState([]);\n    const [page, setPage] = useState(1);\n    const [numPages, setNumPages] = useState(0);\n    const [searchText,setSearchText] = useState('');\n    const [type, setType] = useState(0);\n\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    function getMovies(page) {\n        axios({\n           method: \"GET\",\n           url: `https://api.themoviedb.org/3/search/${type?'tv':'movie'}?api_key=${process.env.REACT_APP_API_KEY}&language=ko-KR&query=${searchText}&page=${page}`\n\n        }).then(response => {\n            setMovies(response.data.results ?? [])\n            setNumPages(response.data.total_pages)\n            \n        }).catch(err => console.log(err.response))\n    }\n    useDebouncedEffect(() => {\n        getMovies(page);\n        setPage(1);\n    }, [searchText], 500);\n\n    useEffect(() => {\n        getMovies(page)\n    },[type, page, getMovies]);\n\n    return (\n        <>\n          <div className=\"content_wrapper\">\n              <span className=\"page__search\">검색</span>\n              <ThemeProvider theme={darkTheme}>\n                  <div className=\"search__container\">\n                      <TextField style={{flex: 1}} className={`search__box`} label={\"영화 검색\"} variant={'filled'}\n                      value={searchText}\n                      onChange={(e) => {\n                          setSearchText(e.target.value)\n                      }} />\n                      <Button variant={'contained'} style={{marginLeft: '10px'}} onClick={getMovies}>\n                          <SearchIcon fontSize=\"large\"/>\n                      </Button>\n                      </div>\n            <Tabs \n                value={type}\n                indicatorColor={'primary'}\n                textColor={'primary'}\n                style={{margin: \"0 auto\", justifyContent: 'center', paddingBottom: 5}}\n                onChange={(event, newValue) => {\n                    setType(newValue);\n                    setPage(1);\n                }}>\n                 <Tab label={'Movies'} style={{width: \"50%\"}}/>\n                 <Tab label={'TV series'} style={{width: \"50%\"}}/>\n\n                </Tabs>\n        </ThemeProvider>\n        <div className=\"movies\">\n        {movies.length > 0 && movies.map((movie, index) => (\n                    <SingleMovie key={movie.id} media_type={type ? \"tv\" : \"movie\"} id={movie.id} movie={movie} {...movie} />\n                ))}\n          {searchText && movies.length<1 && (type ?\n                        <h2>TV 검색결과가 없습니다.</h2>:\n                        <h2>영화 검색결과가 없습니다.</h2>)}\n            </div>\n            {numPages>1 && (\n                <PaginationComponent setPage={setPage} numPages={numPages} />\n            )}\n            </div>\n    \n        </>\n    )\n\n}\n\nexport default Search;","/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/Pages/Tv/Tv.js",[],"/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/Pages/Nav/index.js",[],"/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/context/AppReducer.js",[],"/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/Pages/Search/useDebouncedEffect.js",[],"/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/Pages/SingleMovie/SingleMovie.js",[],"/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/Pages/Pagination/PaginationComponent.js",["96","97"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport Typography from '@material-ui/core/Typography';\nimport {ThemeProvider} from \"@material-ui/styles\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        justifyContent:\"center\",\n        marginTop: '10px',\n        // color: \"rgba(0,0,0,1)\",\n        // '& > * + *': {\n        //     marginTop: theme.spacing(2),\n        // },\n    },\n}));\n\n\nconst PaginationComponent = ({setPage, numPages=6}) => {\n    const classes = useStyles();\n\n    const handlePageChange = (page) => {\n        setPage(page);\n        window.scroll(0,0);\n    };\n    \n    return (\n        <div className={classes.root}>\n           <Pagination\n              count={numPages}\n              onChange={(e) => handlePageChange(e.target.textContent)}\n              hideNextButton={true}\n              hidePrevButton={true}\n              color={\"primary\"}\n              />\n        </div>\n    )\n}\n\nexport default PaginationComponent\n","/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/axios/urls.js",[],"/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/axios/config/config.js",[],"/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/Pages/FocusModal/ContentFocus.js",["98","99"],"import React, { useContext, useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport  SvgIcon  from '@material-ui/core/SvgIcon';\nimport  Modal  from '@material-ui/core/Modal';\nimport  Backdrop  from '@material-ui/core/Backdrop';\nimport  Fade from \"@material-ui/core/Fade\"\nimport axios from 'axios';\nimport { img_original, unavailable } from '../../axios/config/config';\nimport  Button  from '@material-ui/core';\nimport YouTubeIcon from \"@material-ui/icons/YouTube\";\nimport { GlobalContext } from '../../context/GlobalState'; \nimport { api_key } from '../../axios/urls';\nimport \"./ContentFocus.css\";\nimport Carousel from '../Carousel/Carousel';\n\nconst useStyles = makeStyles((theme) => ({\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        width: '90%',\n        maxWidth: '780px',\n        height: '95%',\n        border: '1px solid #282c34',\n        borderRadius: 10,\n        backgroundColor: \"#39445a\",\n        color: \"white\",\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(1, 1, 3),\n    },\n    button: {\n        // display: 'block',\n        // display: 'flex',\n        margin: \"0px auto\",\n        justifySelf: 'center',\n        // width: '30em',\n        maxWidth: 'calc(40em - 20px)',\n        // justifyContent: 'center',\n        borderRadius: '10px',\n    },\n    mySvgStyle: {\n        fill: 'red',\n        // display: 'inline-flex',\n        verticalAlign: 'middle',\n        // whiteSpace: 'pre',\n        // margin: 'auto 0px',\n        // alignItems: 'center',\n        // justifySelf: 'center',\n    },\n}));\n\nexport default function ContentFocus({children, id, media_type}) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [movie,setMovie] = useState();\n    const [video, setVideo] = useState();\n\n    function getMovie() {\n        axios({\n            method: \"GET\",\n            url: `https://api.themoviedb.org/3/${media_type}/${id}?api_key=${api_key}&language=ko`\n        }).then(response => {\n            setMovie(response.data ?? [])\n        })\n    }\n \n    function getVideo() {\n        axios({ \n            method:\"GET\",\n            url: `https://api.themoviedb.org/3/${media_type}/${id}/videos?api_key=${api_key}&language=ko`\n        }).then(response => {\n            setVideo(response.data.results[0]?.key ?? [])\n        })\n    }\n\n    useEffect(() => {\n        getMovie();\n        getVideo();\n    }, []);\n\n    const handleOpen = () => {\n        setOpen(true);\n    }\n\n    const handleClose = () => {\n        setOpen(false);\n    }\n\n    const {\n        add_Movie_to_watchlist,\n        remove_Movie_from_watchlist,\n        add_Movie_to_watched,\n        remove_from_watched,\n        watchlist,\n        watched\n    } = useContext(GlobalContext);\n    let storedMovie = watchlist?.find(o => o.id === id) ? true : false ?? false;\n    let watchedMovie = watched?.find(o => o.id === id) ? true : false ?? false;\n\n    return (\n        <div className={'movie-card'}>\n            <button className=\"movie\" type=\"button\" onClick={handleOpen}>\n                {children}\n            </button>\n            <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                className={classes.modal}\n                open={open}\n                onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >  \n              <Fade in={open}>\n                  {movie && (\n                  <div className=\"content__wrapper\">\n                  <div className=\"content__container\">\n\n                      <div className=\"content__poster\">\n                          <img className={'back__poster'}\n                               src={movie.backdrop_path ? `${img_original}/${movie.backdrop_path}` : unavailable}\n                               alt={`${movie.title ? movie.title : (movie.original_title ? movie.original_title : (movie.name ? movie.name : movie.original_name))} Poster`}/>\n                      </div>\n                      <div className=\"content__about\">\n                       <span className=\"content__title\">\n                           {movie.title ? movie.title : (movie.original_title ? movie.original_title : (movie.name ? movie.name : movie.original_name))}({(movie?.release_date || movie?.first_air_date || '_____').substring(0, 4)})\n                       </span>\n                          &emsp;\n                          <a href={`http://youtu.be/${video}`} target={\"__blank\"}>\n                              <SvgIcon className={classes.mySvgStyle}>\n                                  <YouTubeIcon/>\n                              </SvgIcon>\n                          </a>\n                            </div>\n                            <div className=\"content__tag\">\n                              {movie.tagline && (<i className={'content__tagline'}>{movie.tagline}</i>)}\n\n                              &emsp;\n                              {!watchedMovie ? \n                                <i className={'fa-fw far fa-eye content_focus__icon'}\n                                onClick={() => (add_Movie_to_watched(movie))} />\n                                : <i className=\"fa fa-eye-slash content_focus__icon\" aria-hidden=\"true\"\n                                onClick={() => (remove_from_watched(movie.id))} /> \n                              }\n                              &emsp;\n                              {!watchedMovie ?\n                                        !storedMovie\n                                            ? <i className=\"fa fa-bookmark-o content_focus__icon\" aria-hidden=\"true\"\n                                                 onClick={() => (add_Movie_to_watchlist(movie))}/>\n                                            : <i className={\"fa fa-bookmark content_focus__icon\"}\n                                                 onClick={() => (remove_Movie_from_watchlist(id))}/>\n                                        : <></>}\n\n                            </div>\n\n                            <div className=\"content__description\">\n                               {movie.overview}\n                            </div>\n\n                            <div className=\"content__carusel\">\n                               <Carousel media_type={media_type} id={id} />    \n                            </div>\n                         </div>\n                      </div>\n                  )}\n              </Fade>\n\n            </Modal>\n        </div>\n    )\n}\n ","/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/Pages/Nav/Main/index.js",["100"],"import React from \"react\";\nimport Left from \"./Left\";\nimport {MainWrapper} from \"./Main.styled\";\nimport styled from \"styled-components\";\n\n \n\n\nfunction Main () {\n    return (\n        <MainWrapper>\n           <Left />\n \n        </MainWrapper>\n    )\n}\n\nexport default Main;\n","/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/Pages/Carousel/Carousel.js",[],"/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/Pages/Nav/Main/Main.styled.js",["101","102"],"import styled from 'styled-components';\nimport { device,dark,light } from './variables';\n\nconst IconWrapper = styled.div`\n    \n`;\nconst MainWrapper = styled.div`\n  height: 60px;\n//   margin-bttom: 150px;\n  position: fixed;\n  top: 0;\n  display: flex;\n  justify-content: space-between;\n  background-color: #000;\n  padding: 0 40px;\n  @media ${device.tablet} {\n    padding: 0 100px;\n    height: 70px;\n    div {\n      line-height: 70px;\n    }\n  }\n  z-index: 30;\n  width: 100%;\n`;\n\nconst LeftWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  line-height: 60px;\n`;\nconst RightWrapper = styled.div`\n  .pc {\n    display: none;\n    @media ${device.tablet} {\n      display: flex;\n      justify-content: space-between;\n      width: 220px;\n      font-size: 35px;\n      line-height: 70px;\n    }\n  }\n  .mobile {\n    display: block;\n    font-size: 26px;\n    line-height: 60px;\n    @media ${device.tablet} {\n      display: none;\n    }\n  }\n`;\nconst Logo = styled.div`\n  width: 80px;\n  @media ${device.tablet} {\n    width: 140px;\n  }\n  img {\n    width: 100%;\n  }\n  z-index: 21;\n`;\n\nconst DrawerMenu = styled.div`\n  height: 60px;\n  margin: 20px 0;\n  font-size: 24px;\n  font-weight: bold;\n  padding: 10px;\n  color: black;\n  label {\n    border-bottom: 3px solid red;\n  }\n`;\nexport { MainWrapper, LeftWrapper, RightWrapper, Logo,IconWrapper, DrawerMenu };","/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/Pages/Nav/Main/Left.js",["103","104","105"],"import React, {useEffect,useState} from \"react\";\nimport { Link, NavLink, useHistory } from \"react-router-dom\";\nimport { LeftWrapper} from \"./Main.styled\";\n \nimport styled from \"styled-components\";\n import NetflixIcon from \"./assets/Netflix.png\"\n import {ImMenu} from \"react-icons/im\";\nimport routeList from \"./route/routeList\";\n\nconst BrandLogo = styled(Link)`\n  color: #ffd500;\n  font-weight: 600;\n`;\n\n\nconst Image = styled.img`\nwidth: 100px;\n`;\n\n \nconst StyledMenuBtn = styled.button`\n  background: none;\n  \n  background-image: ${NetflixIcon};\n  width: 4.8rem;\n  height: 4.8rem;\n  border: none;\n  filter: invert(100%);\n  display: none;\n  @media (max-width: 800px) {\n    display: inline-block;\n  }\n`;\nconst CollapseableMenu = styled.div`\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\nwidth: 100%;\noverflow: hidden;\n\ntransition: transform .2s ease, opacity .4s ease;\n@media (max-width: 800px) {\n  padding: 1.8rem;\n  //  display: ${({ isCollapsed }) => (isCollapsed ? 'none' : 'flex')}; \n  flex-direction: column;\n  position: absolute;\n  left:10%;\n  transform-origin: top;\n  transform: ${({ isCollapsed }) => isCollapsed && 'translateX(-100%)'};\n  opacity: ${({ isCollapsed }) => isCollapsed && '0'};\n  background:#000;\n  min-height: 1200px;\n  z-index: 9;\n  left: 0;\n  top: 3.9rem;\n}\n`;\n\nconst MenuList = styled.ul`\npadding: 0;\nmargin-left:2rem;\nmargin-top:0.5rem;\n\n@media (max-width: 800px) {\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n}\n`;\n\nconst MenuItem = styled(NavLink)`\nmargin-left: 3rem;\nmargin-right:0.9rem;\ncolor: #fff;\nopacity: 0.6;\ntext-decoration:none;\nfont-size:1.2rem;\nfont-weight: bold;\nmargin-top:20px;\nline-height:1rem;\n\n\n:active,\n:focus,\n:hover {\n  opacity: 1;\n}\n\n\n@media screen and (max-width : 1600px) {\n  font:bold 14px/24px arail;\n  padding: 0.1rem 2px;\n  margin:0rem 1.9rem 0rem 1.8rem;\n  \n}\n\n@media screen and (max-width: 1400px) {\n  padding 1rem 2px;\n  font-size:0.9rem 2px;\n  margin-left:10px;\n}\n\n@media screen and (max-width: 890px) {\n  padding 1.4rem 2px;\n  font-size:1.4rem;\n  margin-left:70px;\n}\n\n\n\n\n`;\n\n\nconst MenuItem2 = styled(NavLink)`\nmargin-left: 3.9rem;\n\ncolor: #fff;\nopacity: 0.6;\ntext-decoration:none;\n\n:active,\n:focus,\n:hover {\n  opacity: 1;\n}\n\ndisplay:none;\n\n\n@media screen and (max-width: 820px) {\n  padding 1.9rem 2px;\n  font-size:2rem;\n  margin-left:30px;\n  display:block;\n}\n\n`;\n\n \nfunction Left(props) { \n    const [isCollapsed, setCollapse] = useState('true');\n    \n\n    const handleCollapse = () => {\n        setCollapse(!isCollapsed);\n      };\n     \n    return (\n        <LeftWrapper>\n           <BrandLogo to=\"/react-netflix-framework\">\n               <Image src={NetflixIcon } alt=\"Menu Icon\" className=\"menu-icon\" />\n           </BrandLogo>\n           <StyledMenuBtn onClick={handleCollapse}>\n               <ImMenu className=\"Menu-Icon\" size=\"35\"/>\n           </StyledMenuBtn>\n           <CollapseableMenu isCollapsed={isCollapsed}>\n               <MenuList>\n                    {routeList.map(item => (\n                    \n                    <MenuItem\n                    exact={item.path === '/'}\n                    onClick={handleCollapse}\n                    key={item.name}\n                    to={item.path}\n                    >\n                    {item.name}\n                    </MenuItem>\n                    \n                ))}\n               </MenuList>\n           </CollapseableMenu>\n        </LeftWrapper>\n    )\n}\n\nexport default Left;","/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/Pages/Nav/Main/variables.js",[],"/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/Pages/Nav/Main/route/routeList.js",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":2,"column":8,"nodeType":"112","messageId":"113","endLine":2,"endColumn":11},{"ruleId":"110","severity":1,"message":"114","line":4,"column":8,"nodeType":"112","messageId":"113","endLine":4,"endColumn":18},{"ruleId":"110","severity":1,"message":"115","line":5,"column":9,"nodeType":"112","messageId":"113","endLine":5,"endColumn":22},{"ruleId":"110","severity":1,"message":"116","line":9,"column":9,"nodeType":"112","messageId":"113","endLine":9,"endColumn":15},{"ruleId":"117","severity":1,"message":"118","line":81,"column":8,"nodeType":"119","endLine":81,"endColumn":10,"suggestions":"120"},{"ruleId":"110","severity":1,"message":"121","line":4,"column":8,"nodeType":"112","messageId":"113","endLine":4,"endColumn":14},{"ruleId":"110","severity":1,"message":"122","line":2,"column":17,"nodeType":"112","messageId":"113","endLine":2,"endColumn":21},{"ruleId":"110","severity":1,"message":"123","line":2,"column":22,"nodeType":"112","messageId":"113","endLine":2,"endColumn":27},{"ruleId":"110","severity":1,"message":"124","line":1,"column":16,"nodeType":"112","messageId":"113","endLine":1,"endColumn":25},{"ruleId":"110","severity":1,"message":"125","line":2,"column":25,"nodeType":"112","messageId":"113","endLine":2,"endColumn":35},{"ruleId":"110","severity":1,"message":"126","line":115,"column":7,"nodeType":"112","messageId":"113","endLine":115,"endColumn":16},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'Nav' is defined but never used.","Identifier","unusedVar","'Typography' is defined but never used.","'ThemeProvider' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getMovie' and 'getVideo'. Either include them or remove the dependency array.","ArrayExpression",["129"],"'styled' is defined but never used.","'dark' is defined but never used.","'light' is defined but never used.","'useEffect' is defined but never used.","'useHistory' is defined but never used.","'MenuItem2' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"130","fix":"131"},"Update the dependencies array to be: [getMovie, getVideo]",{"range":"132","text":"133"},[2492,2494],"[getMovie, getVideo]"]