{"ast":null,"code":"import React from'react';import{Accordion,OptForm}from'../components';import faqsData from'../fixtures/faqs.json';export function FaqContainer(){return/*#__PURE__*/React.createElement(Accordion,null,/*#__PURE__*/React.createElement(Accordion.Title,null,\"Frequently Asked Questions\"),faqsData.map(function(faq){return/*#__PURE__*/React.createElement(Accordion.Item,{key:faq.id},/*#__PURE__*/React.createElement(Accordion.Header,null,faq.header),/*#__PURE__*/React.createElement(Accordion.Body,null,faq.body));}),/*#__PURE__*/React.createElement(OptForm,null,/*#__PURE__*/React.createElement(OptForm.Text,null,\"Ready to watch? Enter your email to create or restart your membership.\"),/*#__PURE__*/React.createElement(OptForm.Break,null),/*#__PURE__*/React.createElement(OptForm.Input,{type:\"email\",placeholder:\"Email address\"}),/*#__PURE__*/React.createElement(OptForm.Button,null,\"Get Started\")));}","map":{"version":3,"sources":["/home/kim/GitHub/Portfolio/react/netflix-react/src/containers/faq.js"],"names":["React","Accordion","OptForm","faqsData","FaqContainer","map","faq","id","header","body"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,CAAoBC,OAApB,KAAmC,eAAnC,CACA,MAAOC,CAAAA,QAAP,KAAqB,uBAArB,CAEA,MAAO,SAASC,CAAAA,YAAT,EAAwB,CAC7B,mBACE,oBAAC,SAAD,mBACE,oBAAC,SAAD,CAAW,KAAX,mCADF,CAGGD,QAAQ,CAACE,GAAT,CAAa,SAACC,GAAD,qBACZ,oBAAC,SAAD,CAAW,IAAX,EAAgB,GAAG,CAAEA,GAAG,CAACC,EAAzB,eACE,oBAAC,SAAD,CAAW,MAAX,MAAmBD,GAAG,CAACE,MAAvB,CADF,cAEE,oBAAC,SAAD,CAAW,IAAX,MAAiBF,GAAG,CAACG,IAArB,CAFF,CADY,EAAb,CAHH,cAUE,oBAAC,OAAD,mBACE,oBAAC,OAAD,CAAS,IAAT,+EADF,cAEE,oBAAC,OAAD,CAAS,KAAT,MAFF,cAGE,oBAAC,OAAD,CAAS,KAAT,EAAe,IAAI,CAAC,OAApB,CAA4B,WAAW,CAAC,eAAxC,EAHF,cAIE,oBAAC,OAAD,CAAS,MAAT,oBAJF,CAVF,CADF,CAmBD","sourcesContent":["import React from 'react';\nimport { Accordion, OptForm } from '../components';\nimport faqsData from '../fixtures/faqs.json';\n\nexport function FaqContainer() {\n  return (\n    <Accordion>\n      <Accordion.Title>Frequently Asked Questions</Accordion.Title>\n      {/* Need to implement the feature when clicking on one accordion will close all the other accordions */}\n      {faqsData.map((faq) => (\n        <Accordion.Item key={faq.id}>\n          <Accordion.Header>{faq.header}</Accordion.Header>\n          <Accordion.Body>{faq.body}</Accordion.Body>\n        </Accordion.Item>\n      ))}\n\n      <OptForm>\n        <OptForm.Text>Ready to watch? Enter your email to create or restart your membership.</OptForm.Text>\n        <OptForm.Break />\n        <OptForm.Input type=\"email\" placeholder=\"Email address\" />\n        <OptForm.Button>Get Started</OptForm.Button>\n      </OptForm>\n    </Accordion>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}