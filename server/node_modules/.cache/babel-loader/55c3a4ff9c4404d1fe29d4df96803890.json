{"ast":null,"code":"var _jsxFileName = \"/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/components/accordion/index.js\";\nimport React, { useState, createContext, useContext } from \"react\";\nimport { Container, Inner, Item, Title, Header, Body } from './styles/accordion';\nimport { FaPlus, FaMinus } from 'react-icons/fa';\nconst ToggleContext = createContext();\nexport default function Accordion({\n  children,\n  ...restProps\n}) {\n  return /*#__PURE__*/React.createElement(Container, Object.assign({}, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Inner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, children));\n}\n\nAccordion.Item = function AccordionItem({\n  children,\n  ...restProps\n}) {\n  const [toggleShow, setToggleShow] = useState(false);\n  return /*#__PURE__*/React.createElement(ToggleContext.Provider, {\n    value: {\n      toggleShow,\n      setToggleShow\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Item, Object.assign({}, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), children));\n};\n\nAccordion.Title = function AccordionTitle({\n  children,\n  ...restProps\n}) {\n  return /*#__PURE__*/React.createElement(Title, Object.assign({}, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }\n  }), children);\n};\n\nAccordion.Header = function AccordionHeader({\n  children,\n  ...restProps\n}) {\n  const {\n    toggleShow,\n    setToggleShow\n  } = useContext(ToggleContext);\n  return /*#__PURE__*/React.createElement(Header, Object.assign({\n    onClick: () => setToggleShow(!toggleShow)\n  }, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), children, toggleShow ? /*#__PURE__*/React.createElement(FaMinus, {\n    alt: \"close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(FaPlus, {\n    alt: \"Open\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }));\n};\n\nAccordion.Body = function AccordionBody({\n  children,\n  ...restProps\n}) {\n  const {\n    toggleShow\n  } = useContext(ToggleContext);\n  return /*#__PURE__*/React.createElement(Body, Object.assign({\n    className: toggleShow ? 'open' : 'closed'\n  }, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/components/accordion/index.js"],"names":["React","useState","createContext","useContext","Container","Inner","Item","Title","Header","Body","FaPlus","FaMinus","ToggleContext","Accordion","children","restProps","AccordionItem","toggleShow","setToggleShow","AccordionTitle","AccordionHeader","AccordionBody"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,aAAzB,EAAwCC,UAAxC,QAAyD,OAAzD;AACA,SACIC,SADJ,EAEIC,KAFJ,EAGIC,IAHJ,EAIIC,KAJJ,EAKIC,MALJ,EAMIC,IANJ,QAOO,oBAPP;AASA,SAAQC,MAAR,EAAgBC,OAAhB,QAA8B,gBAA9B;AAEA,MAAMC,aAAa,GAAGV,aAAa,EAAnC;AAGA,eAAe,SAASW,SAAT,CAAoB;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAApB,EAAgD;AAC3D,sBACI,oBAAC,SAAD,oBAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,QADL,CADJ,CADJ;AAOH;;AAEDD,SAAS,CAACP,IAAV,GAAiB,SAASU,aAAT,CAAuB;AAAEF,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAvB,EAAkD;AAE/D,QAAM,CAACE,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAAC,KAAD,CAA5C;AAGA,sBACI,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAAEgB,MAAAA,UAAF;AAAcC,MAAAA;AAAd,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,oBAAUH,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAsBD,QAAtB,CADJ,CADJ;AAKH,CAVD;;AAYAD,SAAS,CAACN,KAAV,GAAkB,SAASY,cAAT,CAAwB;AAAEL,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAxB,EAAmD;AAEjE,sBAAO,oBAAC,KAAD,oBAAWA,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAuBD,QAAvB,CAAP;AACH,CAHD;;AAKAD,SAAS,CAACL,MAAV,GAAmB,SAASY,eAAT,CAAyB;AAAEN,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAzB,EAAoD;AAEnE,QAAM;AAAEE,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA+Bf,UAAU,CAACS,aAAD,CAA/C;AAGA,sBACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMM,aAAa,CAAC,CAACD,UAAF;AAApC,KAAuDF,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACMD,QADN,EAEGG,UAAU,gBACP,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,gBAGP,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALN,CADJ;AAUH,CAfD;;AAiBAJ,SAAS,CAACJ,IAAV,GAAiB,SAASY,aAAT,CAAuB;AAAEP,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAvB,EAAkD;AAE/D,QAAM;AAAEE,IAAAA;AAAF,MAAiBd,UAAU,CAACS,aAAD,CAAjC;AAEA,sBACE,oBAAC,IAAD;AAAO,IAAA,SAAS,EAAEK,UAAU,GAAG,MAAH,GAAY;AAAxC,KAAsDF,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAKH,CATD","sourcesContent":["import React, {useState, createContext, useContext} from \"react\";\nimport {\n    Container, \n    Inner,\n    Item,\n    Title,\n    Header,\n    Body,\n} from './styles/accordion'\n\nimport {FaPlus, FaMinus} from 'react-icons/fa';\n\nconst ToggleContext = createContext()\n\n\nexport default function Accordion ({ children, ...restProps }) {\n    return (\n        <Container {...restProps}>\n            <Inner>\n                {children}\n            </Inner>\n        </Container>\n    )\n}\n\nAccordion.Item = function AccordionItem({ children, ...restProps}) {\n\n    const [toggleShow, setToggleShow] = useState(false);\n\n\n    return (\n        <ToggleContext.Provider value={{ toggleShow, setToggleShow}}>\n            <Item {...restProps}>{children}</Item>\n        </ToggleContext.Provider>\n    )\n}\n\nAccordion.Title = function AccordionTitle({ children, ...restProps}) {\n\n    return <Title {...restProps}>{children}</Title>\n}\n\nAccordion.Header = function AccordionHeader({ children, ...restProps}) {\n    \n    const { toggleShow, setToggleShow} = useContext(ToggleContext);\n\n\n    return (\n        <Header onClick={() => setToggleShow(!toggleShow)} {...restProps}>\n             {children}\n          {toggleShow ? (\n              <FaMinus alt=\"close\" />\n          ) : (\n              <FaPlus alt=\"Open\" />\n          )}\n        </Header>\n    )\n}\n\nAccordion.Body = function AccordionBody({ children, ...restProps}) {\n\n    const { toggleShow } = useContext(ToggleContext);\n\n    return (\n      <Body  className={toggleShow ? 'open' : 'closed'} {...restProps}>\n \n      </Body>\n    )\n}"]},"metadata":{},"sourceType":"module"}