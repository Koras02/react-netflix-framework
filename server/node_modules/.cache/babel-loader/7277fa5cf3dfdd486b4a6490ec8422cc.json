{"ast":null,"code":"import _regeneratorRuntime from\"/home/kim/GitHub/Portfolio/react/movie-netflix-framework/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/kim/GitHub/Portfolio/react/movie-netflix-framework/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/kim/GitHub/Portfolio/react/movie-netflix-framework/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useState}from'react';import{HeaderContainer}from'../containers/header';import{Form}from\"../components\";import{FirebaseContext}from'../context/firebase';import{useHistory}from'react-router';import*as ROUTES from'../constants/routes';import{FooterContainer}from'../containers/footer';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function SignIn(){// 이메일 주소 비밀 번호 \nvar history=useHistory();var _useContext=useContext(FirebaseContext),firebase=_useContext.firebase;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),emailAddress=_useState2[0],setEmailAddress=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),error=_useState6[0],setError=_useState6[1];// 핸드폰 번호 이메일 && 핸드폰번호 비밀번호 입력 방식 \nvar isInvalid=password===''||emailAddress==='';function handleSignIn(_x){return _handleSignIn.apply(this,arguments);}function _handleSignIn(){_handleSignIn=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();// 로그인 방식 auth 접속후 Email과 Password 입력 \n// 입력완료시 history 로 Router가 설정된 Browse 사이트로 이동\nfirebase.auth().signInWithEmailAndPassword(emailAddress,password).then(function(){history.push(ROUTES.BROWSE);}).catch(function(error){setError(error.massage);// 패스워드와 이메일 주소를 입력하지않거나 맞지 않을 경우 오류\nsetEmailAddress('');setPassword('');setError(error.message);});case 2:case\"end\":return _context.stop();}}},_callee);}));return _handleSignIn.apply(this,arguments);};// 로그인 구현 \nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(HeaderContainer,{children:/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsx(Form.Title,{children:\"\\uB85C\\uADF8\\uC778\"}),error&&/*#__PURE__*/_jsxs(Form.Error,{\"data-testid\":\"error\",children:[\"\\uC8C4\\uC1A1\\uD569\\uB2C8\\uB2E4. \\uC774 \\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\\uB97C \\uC0AC\\uC6A9\\uD558\\uB294 \\uACC4\\uC815\\uC744 \\uCC3E\\uC744\\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4. \\uB2E4\\uC2DC \\uC2DC\\uB3C4\\uD558\\uC2DC\\uAC70\\uB098\",/*#__PURE__*/_jsx(Form.Link,{children:\"\\uC0C8\\uB85C\\uC6B4 \\uACC4\\uC815\\uC744 \\uB4F1\\uB85D\"}),\"\\uD558\\uC138\\uC694.\"]}),/*#__PURE__*/_jsxs(Form.Base,{onSubmit:handleSignIn,children:[/*#__PURE__*/_jsx(Form.Input,{placeholder:\"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C \\uB610\\uB294 \\uC804\\uD654 \\uBC88\\uD638\",type:\"email\",value:emailAddress,onChange:function onChange(e){return setEmailAddress(e.target.value);},enabled:isInvalid}),/*#__PURE__*/_jsx(Form.Input,{placeholder:\"\\uBE44\\uBC00\\uBC88\\uD638\",type:\"password\",value:password,onChange:function onChange(e){return setPassword(e.target.value);},autoComplete:\"false\",enabled:isInvalid}),/*#__PURE__*/_jsx(Form.Submit,{type:\"submit\",disabled:isInvalid,children:\"\\uB85C\\uADF8\\uC778\"})]}),/*#__PURE__*/_jsxs(Form.Text,{children:[\"Netflix \\uD68C\\uC6D0\\uC774 \\uC544\\uB2CC\\uAC00\\uC694? \",/*#__PURE__*/_jsx(Form.Link,{to:\"/signup\",children:\"\\uC9C0\\uAE08 \\uAC00\\uC785\\uD558\\uC138\\uC694\"})]}),/*#__PURE__*/_jsxs(Form.Text,{children:[\"\\uC774 \\uD398\\uC774\\uC9C0\\uB294 Google reCAPTCHA\\uC758 \\uBCF4\\uD638\\uB97C \\uBC1B\\uC544 \\uC0AC\\uC6A9\\uC790\\uAC00 \\uB85C\\uBD07\\uC774 \\uC544\\uB2D8\\uC744 \\uD655\\uC778\\uD569\\uB2C8\\uB2E4. \",/*#__PURE__*/_jsx(Form.AboutLink,{href:\"\",children:\"\\uC790\\uC138\\uD788 \\uC54C\\uC544\\uBCF4\\uAE30\"})]})]})}),/*#__PURE__*/_jsx(FooterContainer,{})]});}","map":{"version":3,"sources":["/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/pages/signin.js"],"names":["React","useContext","useState","HeaderContainer","Form","FirebaseContext","useHistory","ROUTES","FooterContainer","SignIn","history","firebase","emailAddress","setEmailAddress","password","setPassword","error","setError","isInvalid","handleSignIn","e","preventDefault","auth","signInWithEmailAndPassword","then","push","BROWSE","catch","massage","message","target","value"],"mappings":"0gBAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,QAA5B,KAA4C,OAA5C,CACA,OAASC,eAAT,KAAgC,sBAAhC,CACA,OAASC,IAAT,KAAqB,eAArB,CACA,OAASC,eAAT,KAAgC,qBAAhC,CACA,OAASC,UAAT,KAA2B,cAA3B,CACA,MAAO,GAAKC,CAAAA,MAAZ,KAAwB,qBAAxB,CACA,OAASC,eAAT,KAAgC,sBAAhC,C,6IAGA,cAAe,SAAUC,CAAAA,MAAV,EAAmB,CAE9B;AACA,GAAMC,CAAAA,OAAO,CAAGJ,UAAU,EAA1B,CAH8B,gBAITL,UAAU,CAACI,eAAD,CAJD,CAItBM,QAJsB,aAItBA,QAJsB,eAKUT,QAAQ,CAAC,EAAD,CALlB,wCAKvBU,YALuB,eAKTC,eALS,8BAOEX,QAAQ,CAAC,EAAD,CAPV,yCAOvBY,QAPuB,eAObC,WAPa,8BAQJb,QAAQ,CAAC,EAAD,CARJ,yCAQvBc,KARuB,eAQhBC,QARgB,eAW9B;AACA,GAAMC,CAAAA,SAAS,CAAGJ,QAAQ,GAAK,EAAb,EAAmBF,YAAY,GAAK,EAAtD,CAZ8B,QAcfO,CAAAA,YAde,gJAc9B,iBAA6BC,CAA7B,kHACGA,CAAC,CAACC,cAAF,GAEA;AACA;AACAV,QAAQ,CACLW,IADH,GAEGC,0BAFH,CAE8BX,YAF9B,CAE2CE,QAF3C,EAIGU,IAJH,CAIQ,UAAM,CACRd,OAAO,CAACe,IAAR,CAAalB,MAAM,CAACmB,MAApB,EACH,CANH,EAOGC,KAPH,CAOS,SAACX,KAAD,CAAW,CACdC,QAAQ,CAACD,KAAK,CAACY,OAAP,CAAR,CACA;AACAf,eAAe,CAAC,EAAD,CAAf,CACAE,WAAW,CAAC,EAAD,CAAX,CACAE,QAAQ,CAACD,KAAK,CAACa,OAAP,CAAR,CACH,CAbH,EALH,sDAd8B,+CAiC7B,CAED;AACA,mBACG,wCACE,KAAC,eAAD,wBACG,MAAC,IAAD,yBACE,KAAC,IAAD,CAAM,KAAN,iCADF,CAGGb,KAAK,eAAI,MAAC,IAAD,CAAM,KAAN,EAAY,cAAY,OAAxB,kPACV,KAAC,IAAD,CAAM,IAAN,iEADU,yBAHZ,cAQE,MAAC,IAAD,CAAM,IAAN,EAAW,QAAQ,CAAEG,YAArB,wBACG,KAAC,IAAD,CAAM,KAAN,EACG,WAAW,CAAC,wEADf,CAEG,IAAI,CAAC,OAFR,CAGG,KAAK,CAAEP,YAHV,CAIG,QAAQ,CAAE,kBAACQ,CAAD,QAAOP,CAAAA,eAAe,CAACO,CAAC,CAACU,MAAF,CAASC,KAAV,CAAtB,EAJb,CAMG,OAAO,CAAEb,SANZ,EADH,cAUE,KAAC,IAAD,CAAM,KAAN,EACG,WAAW,CAAC,0BADf,CAEG,IAAI,CAAC,UAFR,CAGG,KAAK,CAAEJ,QAHV,CAIG,QAAQ,CAAE,kBAACM,CAAD,QAAOL,CAAAA,WAAW,CAACK,CAAC,CAACU,MAAF,CAASC,KAAV,CAAlB,EAJb,CAKG,YAAY,CAAC,OALhB,CAMG,OAAO,CAAEb,SANZ,EAVF,cAoBE,KAAC,IAAD,CAAM,MAAN,EAAa,IAAI,CAAC,QAAlB,CAA2B,QAAQ,CAAEA,SAArC,gCApBF,GARF,cAgCE,MAAC,IAAD,CAAM,IAAN,iFACoB,KAAC,IAAD,CAAM,IAAN,EAAW,EAAE,CAAC,SAAd,yDADpB,GAhCF,cAmCE,MAAC,IAAD,CAAM,IAAN,kNACwD,KAAC,IAAD,CAAM,SAAN,EAAgB,IAAI,CAAC,EAArB,yDADxD,GAnCF,GADH,EADF,cA0CE,KAAC,eAAD,IA1CF,GADH,CA8CH","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { HeaderContainer } from '../containers/header';\nimport { Form } from \"../components\";\nimport { FirebaseContext } from '../context/firebase';\nimport { useHistory } from 'react-router';\nimport * as ROUTES from '../constants/routes';\nimport { FooterContainer } from '../containers/footer';\n\n\nexport default function  SignIn() {\n\n    // 이메일 주소 비밀 번호 \n    const history = useHistory();\n    const { firebase } = useContext(FirebaseContext);\n    const [emailAddress, setEmailAddress] = useState('');\n   \n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n \n\n    // 핸드폰 번호 이메일 && 핸드폰번호 비밀번호 입력 방식 \n    const isInvalid = password === '' || emailAddress === '' \n\n    async function handleSignIn (e)  {\n       e.preventDefault();\n\n       // 로그인 방식 auth 접속후 Email과 Password 입력 \n       // 입력완료시 history 로 Router가 설정된 Browse 사이트로 이동\n       firebase\n         .auth()\n         .signInWithEmailAndPassword(emailAddress,password)\n \n         .then(() => {\n             history.push(ROUTES.BROWSE);\n         })\n         .catch((error) => {\n             setError(error.massage);\n             // 패스워드와 이메일 주소를 입력하지않거나 맞지 않을 경우 오류\n             setEmailAddress('');\n             setPassword('');\n             setError(error.message);\n         });        \n    };\n\n    // 로그인 구현 \n    return (\n       <>\n         <HeaderContainer>\n            <Form>\n              <Form.Title>로그인</Form.Title>\n              {/* 로그인 실패시 에러 */}\n              {error && <Form.Error data-testid=\"error\">죄송합니다. 이 이메일 주소를 사용하는 계정을 찾을수 없습니다. 다시 시도하시거나 \n              <Form.Link>새로운 계정을 등록</Form.Link>\n              \n              하세요.</Form.Error>}\n          \n              <Form.Base onSubmit={handleSignIn}>\n                 <Form.Input \n                    placeholder=\"이메일 주소 또는 전화 번호\"  \n                    type=\"email\"\n                    value={emailAddress}\n                    onChange={(e) => setEmailAddress(e.target.value)} \n                   \n                    enabled={isInvalid}\n                />\n\n                <Form.Input \n                   placeholder=\"비밀번호\"\n                   type=\"password\"\n                   value={password}\n                   onChange={(e) => setPassword(e.target.value)}\n                   autoComplete=\"false\"\n                   enabled={isInvalid}\n              \n                />\n\n                <Form.Submit type=\"submit\" disabled={isInvalid}>\n                    로그인\n                </Form.Submit>\n              </Form.Base>\n              <Form.Text>\n                Netflix 회원이 아닌가요? <Form.Link to=\"/signup\">지금 가입하세요</Form.Link>\n              </Form.Text>\n              <Form.Text>\n                  이 페이지는 Google reCAPTCHA의 보호를 받아 사용자가 로봇이 아님을 확인합니다. <Form.AboutLink href=\"\">자세히 알아보기</Form.AboutLink>\n              </Form.Text>\n            </Form>\n         </HeaderContainer>\n         <FooterContainer />\n       </>  \n    )\n}\n\n "]},"metadata":{},"sourceType":"module"}