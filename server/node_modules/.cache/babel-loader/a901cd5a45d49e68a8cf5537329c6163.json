{"ast":null,"code":"var _jsxFileName = \"/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/containers/browse.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport Fuse from \"fuse.js\";\nimport { FirebaseContext } from '../context/firebase';\nimport { useAuthListener } from '../hooks';\nimport { Header, Loading, Card, Player } from '../components';\nimport * as ROUTES from '../constants/routes';\nimport { FooterContainer } from './footer';\nimport { SelectProfileContainer } from './profiles';\nexport function BrowseContainer({\n  slides\n}) {\n  const {\n    firebase\n  } = useContext(FirebaseContext);\n  const user = firebase.auth().currentUser || {};\n  const [profile, setProfile] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [slideRows, setSlideRows] = useState([]);\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false);\n    }, 3000);\n  }, [profile.displayName]);\n  return profile.displayName ? /*#__PURE__*/React.createElement(React.Fragment, null, loading ? /*#__PURE__*/React.createElement(Loading, {\n    src: user.photoURL,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 22\n    }\n  }) : /*#__PURE__*/React.createElement(Loading.ReleasBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 56\n    }\n  })) : /*#__PURE__*/React.createElement(SelectProfileContainer, {\n    user: user,\n    setProfile: setProfile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  });\n}","map":{"version":3,"sources":["/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/containers/browse.js"],"names":["React","useState","useContext","useEffect","Fuse","FirebaseContext","useAuthListener","Header","Loading","Card","Player","ROUTES","FooterContainer","SelectProfileContainer","BrowseContainer","slides","firebase","user","auth","currentUser","profile","setProfile","loading","setLoading","slideRows","setSlideRows","setTimeout","displayName","photoURL"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,SAArC,QAAqD,OAArD;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAAQC,eAAR,QAA+B,qBAA/B;AACA,SAASC,eAAT,QAAgC,UAAhC;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,IAA1B,EAAgCC,MAAhC,QAA8C,eAA9C;AACA,OAAO,KAAKC,MAAZ,MAAwB,qBAAxB;AACA,SAASC,eAAT,QAAgC,UAAhC;AACA,SAASC,sBAAT,QAAuC,YAAvC;AAIA,OAAO,SAASC,eAAT,CAAyB;AAAEC,EAAAA;AAAF,CAAzB,EAAqC;AACxC,QAAM;AAAEC,IAAAA;AAAF,MAAed,UAAU,CAACG,eAAD,CAA/B;AACA,QAAMY,IAAI,GAAGD,QAAQ,CAACE,IAAT,GAAgBC,WAAhB,IAA+B,EAA5C;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACqB,OAAD,EAASC,UAAT,IAAuBtB,QAAQ,CAAC,IAAD,CAArC;AACA,QAAM,CAACuB,SAAD,EAAYC,YAAZ,IAA4BxB,QAAQ,CAAC,EAAD,CAA1C;AAGAE,EAAAA,SAAS,CAAC,MAAM;AACZuB,IAAAA,UAAU,CAAC,MAAM;AACbH,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAFS,EAEP,IAFO,CAAV;AAGH,GAJQ,EAIN,CAACH,OAAO,CAACO,WAAT,CAJM,CAAT;AASA,SAAOP,OAAO,CAACO,WAAR,gBACH,0CACGL,OAAO,gBAAG,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEL,IAAI,CAACW,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,gBAAqC,oBAAC,OAAD,CAAS,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD/C,CADG,gBAMH,oBAAC,sBAAD;AAAwB,IAAA,IAAI,EAAEX,IAA9B;AAAoC,IAAA,UAAU,EAAEI,UAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ;AAQH","sourcesContent":["import React, {useState, useContext, useEffect} from 'react'\nimport Fuse from \"fuse.js\";\nimport {FirebaseContext } from '../context/firebase';\nimport { useAuthListener } from '../hooks';\nimport { Header, Loading, Card, Player } from '../components';\nimport * as ROUTES from '../constants/routes';\nimport { FooterContainer } from './footer';\nimport { SelectProfileContainer } from './profiles';\n \n\n\nexport function BrowseContainer({ slides }) {\n    const { firebase } = useContext(FirebaseContext);\n    const user = firebase.auth().currentUser || {};\n\n    const [profile, setProfile] = useState([]);\n    const [loading,setLoading] = useState(true);\n    const [slideRows, setSlideRows] = useState([]);\n\n\n    useEffect(() => {\n        setTimeout(() => {\n            setLoading(false);\n        }, 3000)\n    }, [profile.displayName]);\n  \n   \n    \n\n    return profile.displayName ? (\n        <>\n          {loading ? <Loading src={user.photoURL} /> : <Loading.ReleasBody /> }\n\n        </>\n    ) : (\n        <SelectProfileContainer user={user} setProfile={setProfile} />\n    )\n}"]},"metadata":{},"sourceType":"module"}