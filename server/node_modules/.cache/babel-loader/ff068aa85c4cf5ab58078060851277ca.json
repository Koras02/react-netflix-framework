{"ast":null,"code":"var _jsxFileName = \"/home/kim/GitHub/Portfolio/react/netflix-react/src/pages/signin.js\";\nimport React, { useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Form } from '../components';\nimport { FooterContainer } from '../containers/footer';\nimport { HeaderContainer } from '../containers/header';\nimport * as ROUTES from '../constants/routes';\nimport { FirebaseContext } from '../context/firebase';\nexport default function Signin() {\n  const history = useHistory();\n  const {\n    firebase\n  } = useContext(FirebaseContext);\n  const [emailAddress, setEmailAddress] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const isInvalid = password === '' || emailAddress === '';\n\n  const handleSignIn = e => {\n    e.preventDefault();\n\n    if (isInvalid) {\n      return setError('There is an error with your Email or Password!');\n    }\n\n    firebase.auth().signInWithEmailAndPassword(emailAddress, password).then(() => {\n      history.push(ROUTES.BROWSE);\n    }).catch(error => {\n      setError(error.message);\n      setEmailAddress('');\n      setPassword('');\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(HeaderContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, \"Sign In\"), error && /*#__PURE__*/React.createElement(Form.Error, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, error), /*#__PURE__*/React.createElement(Form.Base, {\n    onSubmit: handleSignIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Input, {\n    placeholder: \"Email address\",\n    type: \"email\",\n    value: emailAddress,\n    onChange: e => setEmailAddress(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Form.Input, {\n    placeholder: \"Password\",\n    type: \"password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    autoComplete: \"false\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Form.Submit, {\n    type: \"submit\",\n    disabled: isInvalid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Sign In\")), /*#__PURE__*/React.createElement(Form.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"New to Netflix? \", /*#__PURE__*/React.createElement(Form.Link, {\n    to: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }\n  }, \"Sign up now.\")), /*#__PURE__*/React.createElement(Form.TextSmall, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, \"This page is protected by Google reCAPTCHA to ensure you're not a bot. \\xA0\", /*#__PURE__*/React.createElement(Form.Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, \"Learn more.\")))), /*#__PURE__*/React.createElement(FooterContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/kim/GitHub/Portfolio/react/netflix-react/src/pages/signin.js"],"names":["React","useState","useContext","useHistory","Form","FooterContainer","HeaderContainer","ROUTES","FirebaseContext","Signin","history","firebase","emailAddress","setEmailAddress","password","setPassword","error","setError","isInvalid","handleSignIn","e","preventDefault","auth","signInWithEmailAndPassword","then","push","BROWSE","catch","message","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Form } from '../components';\nimport { FooterContainer } from '../containers/footer';\nimport { HeaderContainer } from '../containers/header';\n\nimport * as ROUTES from '../constants/routes';\nimport { FirebaseContext } from '../context/firebase';\n\nexport default function Signin() {\n  const history = useHistory();\n  const { firebase } = useContext(FirebaseContext);\n  const [emailAddress, setEmailAddress] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n\n  const isInvalid = password === '' || emailAddress === '';\n  const handleSignIn = (e) => {\n    e.preventDefault();\n    if (isInvalid) {\n      return setError('There is an error with your Email or Password!');\n    }\n\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(emailAddress, password)\n      .then(() => {\n        history.push(ROUTES.BROWSE);\n      })\n      .catch((error) => {\n        setError(error.message);\n        setEmailAddress('');\n        setPassword('');\n      });\n  };\n\n  return (\n    <>\n      <HeaderContainer>\n        <Form>\n          <Form.Title>Sign In</Form.Title>\n          {error && <Form.Error>{error}</Form.Error>}\n\n          <Form.Base onSubmit={handleSignIn}>\n            <Form.Input\n              placeholder=\"Email address\"\n              type=\"email\"\n              value={emailAddress}\n              onChange={(e) => setEmailAddress(e.target.value)}\n            />\n\n            <Form.Input\n              placeholder=\"Password\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              autoComplete=\"false\"\n            />\n\n            <Form.Submit type=\"submit\" disabled={isInvalid}>\n              Sign In\n            </Form.Submit>\n          </Form.Base>\n\n          <Form.Text>\n            New to Netflix? <Form.Link to=\"/signup\">Sign up now.</Form.Link>\n          </Form.Text>\n          <Form.TextSmall>\n            This page is protected by Google reCAPTCHA to ensure you're not a bot. &nbsp;\n            <Form.Link to=\"/\">Learn more.</Form.Link>\n          </Form.TextSmall>\n        </Form>\n      </HeaderContainer>\n\n      <FooterContainer />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}