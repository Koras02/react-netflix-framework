{"ast":null,"code":"var _jsxFileName = \"/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/pages/signin.js\";\nimport React, { useContext, useState } from 'react';\nimport { HeaderContainer } from '../containers/header';\nimport { Form } from \"../components\";\nimport { FirebaseContext } from '../context/firebase';\nimport { useHistory } from 'react-router';\nimport * as ROUTES from '../constants/routes';\nexport default function SignIn() {\n  // 이메일 주소 비밀 번호 \n  const history = useHistory();\n  const {\n    firebase\n  } = useContext(FirebaseContext);\n  const [emailAddress, setEmailAddress] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false); // 핸드폰 번호 이메일 비밀번호 입력 방식 \n\n  const isInvalid = password === '' || emailAddress === '' || phoneNumber;\n\n  async function handleSignIn(e) {\n    e.preventDefault(); // 로그인 방식 auth 접속후 Email과 Password 입력 \n    // 입력완료시 history 로 Router가 설정된 Browse 사이트로 이동\n\n    firebase.auth().signInWithEmailAndPassword(emailAddress, password).then(() => {\n      history.push(ROUTES.BROWSE);\n    }).catch(error => {\n      setError(error.massage);\n    });\n  } // 로그인 구현 \n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(HeaderContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, \"\\uB85C\\uADF8\\uC778\"))));\n}","map":{"version":3,"sources":["/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/pages/signin.js"],"names":["React","useContext","useState","HeaderContainer","Form","FirebaseContext","useHistory","ROUTES","SignIn","history","firebase","emailAddress","setEmailAddress","phoneNumber","setPhoneNumber","password","setPassword","error","setError","loading","setLoading","isInvalid","handleSignIn","e","preventDefault","auth","signInWithEmailAndPassword","then","push","BROWSE","catch","massage"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,eAAT,QAAgC,sBAAhC;AACA,SAASC,IAAT,QAAqB,eAArB;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAO,KAAKC,MAAZ,MAAwB,qBAAxB;AAGA,eAAe,SAAUC,MAAV,GAAmB;AAE9B;AACA,QAAMC,OAAO,GAAGH,UAAU,EAA1B;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAeT,UAAU,CAACI,eAAD,CAA/B;AACA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,KAAD,CAAtC,CAT8B,CAW9B;;AACA,QAAMmB,SAAS,GAAGN,QAAQ,KAAK,EAAb,IAAmBJ,YAAY,KAAK,EAApC,IAA0CE,WAA5D;;AAEA,iBAAeS,YAAf,CAA6BC,CAA7B,EAAiC;AAC9BA,IAAAA,CAAC,CAACC,cAAF,GAD8B,CAG9B;AACA;;AACAd,IAAAA,QAAQ,CACLe,IADH,GAEGC,0BAFH,CAE8Bf,YAF9B,EAE2CI,QAF3C,EAGGY,IAHH,CAGQ,MAAM;AACRlB,MAAAA,OAAO,CAACmB,IAAR,CAAarB,MAAM,CAACsB,MAApB;AACH,KALH,EAMGC,KANH,CAMUb,KAAD,IAAW;AACdC,MAAAA,QAAQ,CAACD,KAAK,CAACc,OAAP,CAAR;AACH,KARH;AAWF,GA9B6B,CAgC9B;;;AACA,sBACG,uDACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,CADH,CADF,CADH;AAeH","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { HeaderContainer } from '../containers/header';\nimport { Form } from \"../components\";\nimport { FirebaseContext } from '../context/firebase';\nimport { useHistory } from 'react-router';\nimport * as ROUTES from '../constants/routes';\n\n\nexport default function  SignIn() {\n\n    // 이메일 주소 비밀 번호 \n    const history = useHistory();\n    const { firebase } = useContext(FirebaseContext);\n    const [emailAddress, setEmailAddress] = useState('');\n    const [phoneNumber, setPhoneNumber] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    // 핸드폰 번호 이메일 비밀번호 입력 방식 \n    const isInvalid = password === '' || emailAddress === '' || phoneNumber;\n\n    async function handleSignIn (e)  {\n       e.preventDefault();\n\n       // 로그인 방식 auth 접속후 Email과 Password 입력 \n       // 입력완료시 history 로 Router가 설정된 Browse 사이트로 이동\n       firebase\n         .auth()\n         .signInWithEmailAndPassword(emailAddress,password)\n         .then(() => {\n             history.push(ROUTES.BROWSE);\n         })\n         .catch((error) => {\n             setError(error.massage);\n         })\n\n        \n    }\n\n    // 로그인 구현 \n    return (\n       <>\n         <HeaderContainer>\n            <Form>\n              <Form.Title>로그인</Form.Title>\n          \n              {/* 로그인 실패시 에러 */}\n              {/* {error && <Form.Error>{error}</Form.Error>} */}\n            \n            \n            \n            </Form>\n         </HeaderContainer>\n       </>  \n    )\n}\n\n "]},"metadata":{},"sourceType":"module"}