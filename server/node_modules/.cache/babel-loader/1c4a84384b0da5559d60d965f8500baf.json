{"ast":null,"code":"import _objectSpread from\"/home/kim/GitHub/Portfolio/react/movie-netflix-framework/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/home/kim/GitHub/Portfolio/react/movie-netflix-framework/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React from'react';import{Route,Redirect}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";export function IsUserRedirect(_ref){var user=_ref.user,loggedInPath=_ref.loggedInPath,children=_ref.children,rest=_objectWithoutProperties(_ref,[\"user\",\"loggedInPath\",\"children\"]);return/*#__PURE__*/_jsx(Route,_objectSpread(_objectSpread({},rest),{},{render:function render(){if(!user){return children;}if(user){return/*#__PURE__*/_jsx(Redirect,{to:{pathname:loggedInPath}});}return null;}}));}// 보호된 경로 = 조건이 충족될때 보여질 항목 \nexport function ProtectedRoute(_ref2){var user=_ref2.user,children=_ref2.children,rest=_objectWithoutProperties(_ref2,[\"user\",\"children\"]);return/*#__PURE__*/_jsx(Route,_objectSpread(_objectSpread({},rest),{},{render:function render(_ref3){var location=_ref3.location;if(user){return children;}if(!user){return/*#__PURE__*/_jsx(Redirect,{to:{pathname:'signin',state:{from:location}}});}return null;}}));}","map":{"version":3,"sources":["/home/kim/GitHub/Portfolio/react/movie-netflix-framework/client/src/helpers/routes.js"],"names":["React","Route","Redirect","IsUserRedirect","user","loggedInPath","children","rest","pathname","ProtectedRoute","location","state","from"],"mappings":"iXAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,CAAgBC,QAAhB,KAAgC,kBAAhC,C,2CAEA,MAAO,SAASC,CAAAA,cAAT,MAAmE,IAAzCC,CAAAA,IAAyC,MAAzCA,IAAyC,CAAnCC,YAAmC,MAAnCA,YAAmC,CAArBC,QAAqB,MAArBA,QAAqB,CAARC,IAAQ,mEACxE,mBACE,KAAC,KAAD,gCACMA,IADN,MAEE,MAAM,CAAE,iBAAM,CACZ,GAAI,CAACH,IAAL,CAAW,CACT,MAAOE,CAAAA,QAAP,CACD,CAED,GAAIF,IAAJ,CAAU,CACR,mBACE,KAAC,QAAD,EACE,EAAE,CAAE,CACFI,QAAQ,CAAEH,YADR,CADN,EADF,CAOD,CAED,MAAO,KAAP,CACD,CAlBH,GADF,CAsBD,CAED;AACA,MAAO,SAASI,CAAAA,cAAT,OAAqD,IAA3BL,CAAAA,IAA2B,OAA3BA,IAA2B,CAArBE,QAAqB,OAArBA,QAAqB,CAARC,IAAQ,qDAC1D,mBACE,KAAC,KAAD,gCACMA,IADN,MAEE,MAAM,CAAE,sBAAkB,IAAfG,CAAAA,QAAe,OAAfA,QAAe,CACxB,GAAIN,IAAJ,CAAU,CACR,MAAOE,CAAAA,QAAP,CACD,CAED,GAAI,CAACF,IAAL,CAAW,CACT,mBACE,KAAC,QAAD,EACE,EAAE,CAAE,CACFI,QAAQ,CAAE,QADR,CAEFG,KAAK,CAAE,CAAEC,IAAI,CAAEF,QAAR,CAFL,CADN,EADF,CAQD,CAED,MAAO,KAAP,CACD,CAnBH,GADF,CAuBD","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport function IsUserRedirect({ user, loggedInPath, children, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={() => {\n        if (!user) {\n          return children;\n        }\n\n        if (user) {\n          return (\n            <Redirect\n              to={{\n                pathname: loggedInPath,\n              }}\n            />\n          );\n        }\n\n        return null;\n      }}\n    />\n  );\n}\n\n// 보호된 경로 = 조건이 충족될때 보여질 항목 \nexport function ProtectedRoute({ user, children, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={({ location }) => {\n        if (user) {\n          return children;\n        }\n\n        if (!user) {\n          return (\n            <Redirect\n              to={{\n                pathname: 'signin',\n                state: { from: location },\n              }}\n            />\n          );\n        }\n\n        return null;\n      }}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}